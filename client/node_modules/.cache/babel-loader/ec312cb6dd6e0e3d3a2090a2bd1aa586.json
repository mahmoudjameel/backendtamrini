{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\khamsat\\\\Nouveau dossier\\\\tamreny_project\\\\tamreny\\\\client\\\\src\\\\screens\\\\Nutritions\\\\Nutritions.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Table, DataBox, SearchBox, DeleteBox } from \"../../components\"; //Hooks\n\nimport useNutritionMethodsHook from \"./hooks/index\"; //Styles\n\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NutritionMethods = () => {\n  _s();\n\n  const {\n    getNutritionMethods,\n    deleteNutritionMethod,\n    addNutritionMethod,\n    editNutritionMethod\n  } = useNutritionMethodsHook();\n  const [nutritionMethods, setNutritionMethods] = useState([]);\n  const [addBoxVisible, setAddBoxVisible] = useState(false);\n  const [editBoxVisible, setEditBoxVisible] = useState(false);\n  const [deleteBoxVisible, setDeleteBoxVisible] = useState(false);\n  const [nutritionMethodObj, setNutritionMethodObj] = useState({\n    _id: 0,\n    name: \"\",\n    protein: 0,\n    fat: 0,\n    energy: 0,\n    carbs: 0\n  });\n  const addFormRef = useRef(null);\n  const editFormRef = useRef(null);\n  useEffect(() => {\n    (async () => {\n      const result = await getNutritionMethods();\n\n      if (result) {\n        setNutritionMethods(result);\n      }\n    })();\n  }, []);\n  useEffect(() => {\n    if (addBoxVisible) setNutritionMethodObj({\n      _id: 0,\n      name: \"\",\n      protein: 0,\n      fat: 0,\n      energy: 0,\n      carbs: 0\n    });\n  }, [addBoxVisible]);\n\n  const onClickEdit = _id => {\n    const nutritionMethod = nutritionMethods.find(u => u._id === _id);\n    setNutritionMethodObj(nutritionMethod);\n    setEditBoxVisible(true);\n  };\n\n  const onClickDelete = _id => {\n    setNutritionMethodObj(nutritionMethods.find(u => u._id === _id));\n    setDeleteBoxVisible(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\\u0644\\u0648\\u062D\\u0629 \\u0627\\u0644\\u062A\\u062D\\u0643\\u0645 / \\u0627\\u0644\\u0642\\u064A\\u0645 \\u0627\\u0644\\u063A\\u0630\\u0627\\u0626\\u064A\\u0629\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteBox, {\n      visible: deleteBoxVisible,\n      setVisible: setDeleteBoxVisible,\n      title: `حذف الأكلة رقم ${nutritionMethodObj._id}`,\n      onDelete: async () => {\n        if (await deleteNutritionMethod(nutritionMethodObj._id)) {\n          setNutritionMethods(nutritionMethods.filter(u => u._id !== nutritionMethodObj._id));\n          setDeleteBoxVisible(false);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataBox, {\n      visible: addBoxVisible,\n      setVisible: setAddBoxVisible,\n      options: {\n        title: \"اضافة اكلة جديدة\",\n        onSave: async () => {\n          const nutritionMethod = await addNutritionMethod(addFormRef);\n\n          if (nutritionMethod) {\n            setNutritionMethods([...nutritionMethods, nutritionMethod]);\n            setAddBoxVisible(false);\n          }\n        },\n        btnSave: \"اضافة\",\n        formRef: addFormRef\n      },\n      inputs: [{\n        tag: \"input\",\n        label: \"الاسم\",\n        props: {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"الاسم\",\n          required: true,\n          maxLength: 100,\n          onChange: e => setNutritionMethodObj({ ...nutritionMethodObj,\n            name: e.target.value\n          })\n        }\n      }, {\n        tag: \"input\",\n        label: \"البروتينات\",\n        props: {\n          type: \"number\",\n          name: \"protein\",\n          placeholder: \"البروتينات\",\n          required: true,\n          maxLength: 100,\n          onChange: e => setNutritionMethodObj({ ...nutritionMethodObj,\n            protein: e.target.value\n          })\n        }\n      }, {\n        tag: \"input\",\n        label: \"الطاقة\",\n        props: {\n          type: \"number\",\n          name: \"energy\",\n          placeholder: \"الطاقة\",\n          required: true,\n          maxLength: 100,\n          onChange: e => setNutritionMethodObj({ ...nutritionMethodObj,\n            energy: e.target.value\n          })\n        }\n      }, {\n        tag: \"input\",\n        label: \"الدهون\",\n        props: {\n          type: \"number\",\n          name: \"fat\",\n          placeholder: \"الدهون\",\n          required: true,\n          maxLength: 100,\n          onChange: e => setNutritionMethodObj({ ...nutritionMethodObj,\n            fat: e.target.value\n          })\n        }\n      }, {\n        tag: \"input\",\n        label: \"الكربوهيدرات\",\n        props: {\n          type: \"text\",\n          name: \"carbs\",\n          placeholder: \"الكربوهيدرات\",\n          required: true,\n          maxLength: 100,\n          onChange: e => setNutritionMethodObj({ ...nutritionMethodObj,\n            carbs: e.target.value\n          })\n        }\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataBox, {\n      visible: editBoxVisible,\n      setVisible: setEditBoxVisible,\n      options: {\n        name: `تعديل الأكلة رقم ${nutritionMethodObj._id}`,\n        onSave: async () => {\n          const result = await editNutritionMethod(editFormRef);\n\n          if (result) {\n            setNutritionMethods(nutritionMethods.map(u => u._id === result._id ? result : u));\n            setEditBoxVisible(false);\n          }\n        },\n        saveBtn: \"تعديل\",\n        formRef: editFormRef\n      },\n      inputs: [{\n        tag: \"input\",\n        props: {\n          type: \"hidden\",\n          value: nutritionMethodObj._id,\n          name: \"_id\"\n        }\n      }, {\n        tag: \"input\",\n        label: \"الاسم\",\n        props: {\n          type: \"text\",\n          value: nutritionMethodObj.name,\n          name: \"name\",\n          placeholder: \"الاسم\",\n          required: true,\n          maxLength: 100,\n          onChange: e => setNutritionMethodObj({ ...nutritionMethodObj,\n            name: e.target.value\n          })\n        }\n      }, {\n        tag: \"input\",\n        label: \"البروتينات\",\n        props: {\n          type: \"number\",\n          value: nutritionMethodObj.protein,\n          name: \"protein\",\n          placeholder: \"البروتينات\",\n          required: true,\n          maxLength: 100,\n          onChange: e => setNutritionMethodObj({ ...nutritionMethodObj,\n            protein: e.target.value\n          })\n        }\n      }, {\n        tag: \"input\",\n        label: \"الطاقة\",\n        props: {\n          type: \"number\",\n          value: nutritionMethodObj.energy,\n          name: \"energy\",\n          placeholder: \"الطاقة\",\n          required: true,\n          maxLength: 100,\n          onChange: e => setNutritionMethodObj({ ...nutritionMethodObj,\n            energy: e.target.value\n          })\n        }\n      }, {\n        tag: \"input\",\n        label: \"الدهون\",\n        props: {\n          type: \"number\",\n          value: nutritionMethodObj.fat,\n          name: \"fat\",\n          placeholder: \"الدهون\",\n          required: true,\n          maxLength: 100,\n          onChange: e => setNutritionMethodObj({ ...nutritionMethodObj,\n            fat: e.target.value\n          })\n        }\n      }, {\n        tag: \"input\",\n        label: \"الكربوهيدرات\",\n        props: {\n          type: \"text\",\n          value: nutritionMethodObj.carbs,\n          name: \"carbs\",\n          placeholder: \"الكربوهيدرات\",\n          required: true,\n          maxLength: 100,\n          onChange: e => setNutritionMethodObj({ ...nutritionMethodObj,\n            carbs: e.target.value\n          })\n        }\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-position\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0644\\u0648\\u062D\\u0629 \\u0627\\u0644\\u062A\\u062D\\u0643\\u0645\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"\\u0627\\u0644\\u0642\\u064A\\u0645 \\u0627\\u0644\\u063A\\u0630\\u0627\\u0626\\u064A\\u0629\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-new\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-add-new\",\n            onClick: () => setAddBoxVisible(true),\n            children: \"\\u0623\\u0636\\u0641 \\u062C\\u062F\\u064A\\u062F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          actions: {\n            edit: onClickEdit,\n            delete: onClickDelete\n          },\n          headers: [\"#\", \"الاسم\", \"البروتينات\", \"الطاقة\", \"الدهون\", \"الكربوهيدرات\"],\n          data: nutritionMethods && nutritionMethods.map(u => [u._id, u.name, u.protein, u.energy, u.fat, u.carbs])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NutritionMethods, \"WtNmYMDSBiE/youGEeB2ycP61vA=\", false, function () {\n  return [useNutritionMethodsHook];\n});\n\n_c = NutritionMethods;\nexport default NutritionMethods;\n\nvar _c;\n\n$RefreshReg$(_c, \"NutritionMethods\");","map":{"version":3,"sources":["C:/Users/user/Desktop/khamsat/Nouveau dossier/tamreny_project/tamreny/client/src/screens/Nutritions/Nutritions.jsx"],"names":["useState","useEffect","useRef","Helmet","Table","DataBox","SearchBox","DeleteBox","useNutritionMethodsHook","NutritionMethods","getNutritionMethods","deleteNutritionMethod","addNutritionMethod","editNutritionMethod","nutritionMethods","setNutritionMethods","addBoxVisible","setAddBoxVisible","editBoxVisible","setEditBoxVisible","deleteBoxVisible","setDeleteBoxVisible","nutritionMethodObj","setNutritionMethodObj","_id","name","protein","fat","energy","carbs","addFormRef","editFormRef","result","onClickEdit","nutritionMethod","find","u","onClickDelete","filter","title","onSave","btnSave","formRef","tag","label","props","type","placeholder","required","maxLength","onChange","e","target","value","map","saveBtn","edit","delete"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,KAAT,EAAgBC,OAAhB,EAAyBC,SAAzB,EAAoCC,SAApC,QAAqD,kBAArD,C,CAEA;;AACA,OAAOC,uBAAP,MAAoC,eAApC,C,CAEA;;AACA,OAAO,cAAP;;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC7B,QAAM;AACJC,IAAAA,mBADI;AAEJC,IAAAA,qBAFI;AAGJC,IAAAA,kBAHI;AAIJC,IAAAA;AAJI,MAKFL,uBAAuB,EAL3B;AAOA,QAAM,CAACM,gBAAD,EAAmBC,mBAAnB,IAA0Cf,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACgB,aAAD,EAAgBC,gBAAhB,IAAoCjB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACkB,cAAD,EAAiBC,iBAAjB,IAAsCnB,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACoB,gBAAD,EAAmBC,mBAAnB,IAA0CrB,QAAQ,CAAC,KAAD,CAAxD;AAEA,QAAM,CAACsB,kBAAD,EAAqBC,qBAArB,IAA8CvB,QAAQ,CAAC;AAC3DwB,IAAAA,GAAG,EAAE,CADsD;AAE3DC,IAAAA,IAAI,EAAE,EAFqD;AAG3DC,IAAAA,OAAO,EAAE,CAHkD;AAI3DC,IAAAA,GAAG,EAAE,CAJsD;AAK3DC,IAAAA,MAAM,EAAE,CALmD;AAM3DC,IAAAA,KAAK,EAAE;AANoD,GAAD,CAA5D;AASA,QAAMC,UAAU,GAAG5B,MAAM,CAAC,IAAD,CAAzB;AACA,QAAM6B,WAAW,GAAG7B,MAAM,CAAC,IAAD,CAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,YAAM+B,MAAM,GAAG,MAAMtB,mBAAmB,EAAxC;;AAEA,UAAIsB,MAAJ,EAAY;AACVjB,QAAAA,mBAAmB,CAACiB,MAAD,CAAnB;AACD;AACF,KAND;AAOD,GARQ,EAQN,EARM,CAAT;AAUA/B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,aAAJ,EACEO,qBAAqB,CAAC;AACpBC,MAAAA,GAAG,EAAE,CADe;AAEpBC,MAAAA,IAAI,EAAE,EAFc;AAGpBC,MAAAA,OAAO,EAAE,CAHW;AAIpBC,MAAAA,GAAG,EAAE,CAJe;AAKpBC,MAAAA,MAAM,EAAE,CALY;AAMpBC,MAAAA,KAAK,EAAE;AANa,KAAD,CAArB;AAQH,GAVQ,EAUN,CAACb,aAAD,CAVM,CAAT;;AAYA,QAAMiB,WAAW,GAAIT,GAAD,IAAS;AAC3B,UAAMU,eAAe,GAAGpB,gBAAgB,CAACqB,IAAjB,CAAuBC,CAAD,IAAOA,CAAC,CAACZ,GAAF,KAAUA,GAAvC,CAAxB;AACAD,IAAAA,qBAAqB,CAACW,eAAD,CAArB;AACAf,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,GAJD;;AAKA,QAAMkB,aAAa,GAAIb,GAAD,IAAS;AAC7BD,IAAAA,qBAAqB,CAACT,gBAAgB,CAACqB,IAAjB,CAAuBC,CAAD,IAAOA,CAAC,CAACZ,GAAF,KAAUA,GAAvC,CAAD,CAArB;AACAH,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,SAAD;AACE,MAAA,OAAO,EAAED,gBADX;AAEE,MAAA,UAAU,EAAEC,mBAFd;AAGE,MAAA,KAAK,EAAG,kBAAiBC,kBAAkB,CAACE,GAAI,EAHlD;AAIE,MAAA,QAAQ,EAAE,YAAY;AACpB,YAAI,MAAMb,qBAAqB,CAACW,kBAAkB,CAACE,GAApB,CAA/B,EAAyD;AACvDT,UAAAA,mBAAmB,CACjBD,gBAAgB,CAACwB,MAAjB,CAAyBF,CAAD,IAAOA,CAAC,CAACZ,GAAF,KAAUF,kBAAkB,CAACE,GAA5D,CADiB,CAAnB;AAGAH,UAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD;AACF;AAXH;AAAA;AAAA;AAAA;AAAA,YAJF,eAiBE,QAAC,OAAD;AACE,MAAA,OAAO,EAAEL,aADX;AAEE,MAAA,UAAU,EAAEC,gBAFd;AAGE,MAAA,OAAO,EAAE;AACPsB,QAAAA,KAAK,EAAE,kBADA;AAEPC,QAAAA,MAAM,EAAE,YAAY;AAClB,gBAAMN,eAAe,GAAG,MAAMtB,kBAAkB,CAACkB,UAAD,CAAhD;;AACA,cAAII,eAAJ,EAAqB;AACnBnB,YAAAA,mBAAmB,CAAC,CAAC,GAAGD,gBAAJ,EAAsBoB,eAAtB,CAAD,CAAnB;AACAjB,YAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;AACF,SARM;AASPwB,QAAAA,OAAO,EAAE,OATF;AAUPC,QAAAA,OAAO,EAAEZ;AAVF,OAHX;AAeE,MAAA,MAAM,EAAE,CACN;AACEa,QAAAA,GAAG,EAAE,OADP;AAEEC,QAAAA,KAAK,EAAE,OAFT;AAGEC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE,MADD;AAELrB,UAAAA,IAAI,EAAE,MAFD;AAGLsB,UAAAA,WAAW,EAAE,OAHR;AAILC,UAAAA,QAAQ,EAAE,IAJL;AAKLC,UAAAA,SAAS,EAAE,GALN;AAMLC,UAAAA,QAAQ,EAAGC,CAAD,IACR5B,qBAAqB,CAAC,EACpB,GAAGD,kBADiB;AAEpBG,YAAAA,IAAI,EAAE0B,CAAC,CAACC,MAAF,CAASC;AAFK,WAAD;AAPlB;AAHT,OADM,EAiBN;AACEV,QAAAA,GAAG,EAAE,OADP;AAEEC,QAAAA,KAAK,EAAE,YAFT;AAGEC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE,QADD;AAELrB,UAAAA,IAAI,EAAE,SAFD;AAGLsB,UAAAA,WAAW,EAAE,YAHR;AAILC,UAAAA,QAAQ,EAAE,IAJL;AAKLC,UAAAA,SAAS,EAAE,GALN;AAMLC,UAAAA,QAAQ,EAAGC,CAAD,IACR5B,qBAAqB,CAAC,EACpB,GAAGD,kBADiB;AAEpBI,YAAAA,OAAO,EAAEyB,CAAC,CAACC,MAAF,CAASC;AAFE,WAAD;AAPlB;AAHT,OAjBM,EAiCN;AACEV,QAAAA,GAAG,EAAE,OADP;AAEEC,QAAAA,KAAK,EAAE,QAFT;AAGEC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE,QADD;AAELrB,UAAAA,IAAI,EAAE,QAFD;AAGLsB,UAAAA,WAAW,EAAE,QAHR;AAILC,UAAAA,QAAQ,EAAE,IAJL;AAKLC,UAAAA,SAAS,EAAE,GALN;AAMLC,UAAAA,QAAQ,EAAGC,CAAD,IACR5B,qBAAqB,CAAC,EACpB,GAAGD,kBADiB;AAEpBM,YAAAA,MAAM,EAAEuB,CAAC,CAACC,MAAF,CAASC;AAFG,WAAD;AAPlB;AAHT,OAjCM,EAiDN;AACEV,QAAAA,GAAG,EAAE,OADP;AAEEC,QAAAA,KAAK,EAAE,QAFT;AAGEC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE,QADD;AAELrB,UAAAA,IAAI,EAAE,KAFD;AAGLsB,UAAAA,WAAW,EAAE,QAHR;AAILC,UAAAA,QAAQ,EAAE,IAJL;AAKLC,UAAAA,SAAS,EAAE,GALN;AAMLC,UAAAA,QAAQ,EAAGC,CAAD,IACR5B,qBAAqB,CAAC,EACpB,GAAGD,kBADiB;AAEpBK,YAAAA,GAAG,EAAEwB,CAAC,CAACC,MAAF,CAASC;AAFM,WAAD;AAPlB;AAHT,OAjDM,EAiEN;AACEV,QAAAA,GAAG,EAAE,OADP;AAEEC,QAAAA,KAAK,EAAE,cAFT;AAGEC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE,MADD;AAELrB,UAAAA,IAAI,EAAE,OAFD;AAGLsB,UAAAA,WAAW,EAAE,cAHR;AAILC,UAAAA,QAAQ,EAAE,IAJL;AAKLC,UAAAA,SAAS,EAAE,GALN;AAMLC,UAAAA,QAAQ,EAAGC,CAAD,IACR5B,qBAAqB,CAAC,EACpB,GAAGD,kBADiB;AAEpBO,YAAAA,KAAK,EAAEsB,CAAC,CAACC,MAAF,CAASC;AAFI,WAAD;AAPlB;AAHT,OAjEM;AAfV;AAAA;AAAA;AAAA;AAAA,YAjBF,eAmHE,QAAC,OAAD;AACE,MAAA,OAAO,EAAEnC,cADX;AAEE,MAAA,UAAU,EAAEC,iBAFd;AAGE,MAAA,OAAO,EAAE;AACPM,QAAAA,IAAI,EAAG,oBAAmBH,kBAAkB,CAACE,GAAI,EAD1C;AAEPgB,QAAAA,MAAM,EAAE,YAAY;AAClB,gBAAMR,MAAM,GAAG,MAAMnB,mBAAmB,CAACkB,WAAD,CAAxC;;AACA,cAAIC,MAAJ,EAAY;AACVjB,YAAAA,mBAAmB,CACjBD,gBAAgB,CAACwC,GAAjB,CAAsBlB,CAAD,IAAQA,CAAC,CAACZ,GAAF,KAAUQ,MAAM,CAACR,GAAjB,GAAuBQ,MAAvB,GAAgCI,CAA7D,CADiB,CAAnB;AAGAjB,YAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD;AACF,SAVM;AAWPoC,QAAAA,OAAO,EAAE,OAXF;AAYPb,QAAAA,OAAO,EAAEX;AAZF,OAHX;AAiBE,MAAA,MAAM,EAAE,CACN;AACEY,QAAAA,GAAG,EAAE,OADP;AAEEE,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE,QADD;AAELO,UAAAA,KAAK,EAAE/B,kBAAkB,CAACE,GAFrB;AAGLC,UAAAA,IAAI,EAAE;AAHD;AAFT,OADM,EASN;AACEkB,QAAAA,GAAG,EAAE,OADP;AAEEC,QAAAA,KAAK,EAAE,OAFT;AAGEC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE,MADD;AAELO,UAAAA,KAAK,EAAE/B,kBAAkB,CAACG,IAFrB;AAGLA,UAAAA,IAAI,EAAE,MAHD;AAILsB,UAAAA,WAAW,EAAE,OAJR;AAKLC,UAAAA,QAAQ,EAAE,IALL;AAMLC,UAAAA,SAAS,EAAE,GANN;AAOLC,UAAAA,QAAQ,EAAGC,CAAD,IACR5B,qBAAqB,CAAC,EACpB,GAAGD,kBADiB;AAEpBG,YAAAA,IAAI,EAAE0B,CAAC,CAACC,MAAF,CAASC;AAFK,WAAD;AARlB;AAHT,OATM,EA0BN;AACEV,QAAAA,GAAG,EAAE,OADP;AAEEC,QAAAA,KAAK,EAAE,YAFT;AAGEC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE,QADD;AAELO,UAAAA,KAAK,EAAE/B,kBAAkB,CAACI,OAFrB;AAGLD,UAAAA,IAAI,EAAE,SAHD;AAILsB,UAAAA,WAAW,EAAE,YAJR;AAKLC,UAAAA,QAAQ,EAAE,IALL;AAMLC,UAAAA,SAAS,EAAE,GANN;AAOLC,UAAAA,QAAQ,EAAGC,CAAD,IACR5B,qBAAqB,CAAC,EACpB,GAAGD,kBADiB;AAEpBI,YAAAA,OAAO,EAAEyB,CAAC,CAACC,MAAF,CAASC;AAFE,WAAD;AARlB;AAHT,OA1BM,EA2CN;AACEV,QAAAA,GAAG,EAAE,OADP;AAEEC,QAAAA,KAAK,EAAE,QAFT;AAGEC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE,QADD;AAELO,UAAAA,KAAK,EAAE/B,kBAAkB,CAACM,MAFrB;AAGLH,UAAAA,IAAI,EAAE,QAHD;AAILsB,UAAAA,WAAW,EAAE,QAJR;AAKLC,UAAAA,QAAQ,EAAE,IALL;AAMLC,UAAAA,SAAS,EAAE,GANN;AAOLC,UAAAA,QAAQ,EAAGC,CAAD,IACR5B,qBAAqB,CAAC,EACpB,GAAGD,kBADiB;AAEpBM,YAAAA,MAAM,EAAEuB,CAAC,CAACC,MAAF,CAASC;AAFG,WAAD;AARlB;AAHT,OA3CM,EA4DN;AACEV,QAAAA,GAAG,EAAE,OADP;AAEEC,QAAAA,KAAK,EAAE,QAFT;AAGEC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE,QADD;AAELO,UAAAA,KAAK,EAAE/B,kBAAkB,CAACK,GAFrB;AAGLF,UAAAA,IAAI,EAAE,KAHD;AAILsB,UAAAA,WAAW,EAAE,QAJR;AAKLC,UAAAA,QAAQ,EAAE,IALL;AAMLC,UAAAA,SAAS,EAAE,GANN;AAOLC,UAAAA,QAAQ,EAAGC,CAAD,IACR5B,qBAAqB,CAAC,EACpB,GAAGD,kBADiB;AAEpBK,YAAAA,GAAG,EAAEwB,CAAC,CAACC,MAAF,CAASC;AAFM,WAAD;AARlB;AAHT,OA5DM,EA6EN;AACEV,QAAAA,GAAG,EAAE,OADP;AAEEC,QAAAA,KAAK,EAAE,cAFT;AAGEC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE,MADD;AAELO,UAAAA,KAAK,EAAE/B,kBAAkB,CAACO,KAFrB;AAGLJ,UAAAA,IAAI,EAAE,OAHD;AAILsB,UAAAA,WAAW,EAAE,cAJR;AAKLC,UAAAA,QAAQ,EAAE,IALL;AAMLC,UAAAA,SAAS,EAAE,GANN;AAOLC,UAAAA,QAAQ,EAAGC,CAAD,IACR5B,qBAAqB,CAAC,EACpB,GAAGD,kBADiB;AAEpBO,YAAAA,KAAK,EAAEsB,CAAC,CAACC,MAAF,CAASC;AAFI,WAAD;AARlB;AAHT,OA7EM;AAjBV;AAAA;AAAA;AAAA;AAAA,YAnHF,eAoOE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCAEE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,iCACE;AACE,YAAA,SAAS,EAAC,aADZ;AAEE,YAAA,OAAO,EAAE,MAAMpC,gBAAgB,CAAC,IAAD,CAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAUE,QAAC,KAAD;AACE,UAAA,OAAO,EAAE;AACPuC,YAAAA,IAAI,EAAEvB,WADC;AAEPwB,YAAAA,MAAM,EAAEpB;AAFD,WADX;AAKE,UAAA,OAAO,EAAE,CAAC,GAAD,EAAM,OAAN,EAAe,YAAf,EAA6B,QAA7B,EAAuC,QAAvC,EAAiD,cAAjD,CALX;AAME,UAAA,IAAI,EACFvB,gBAAgB,IAChBA,gBAAgB,CAACwC,GAAjB,CAAsBlB,CAAD,IAAO,CAC1BA,CAAC,CAACZ,GADwB,EAE1BY,CAAC,CAACX,IAFwB,EAG1BW,CAAC,CAACV,OAHwB,EAI1BU,CAAC,CAACR,MAJwB,EAK1BQ,CAAC,CAACT,GALwB,EAM1BS,CAAC,CAACP,KANwB,CAA5B;AARJ;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YApOF;AAAA,kBADF;AA2QD,CApUD;;GAAMpB,gB;UAMAD,uB;;;KANAC,gB;AAsUN,eAAeA,gBAAf","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Table, DataBox, SearchBox, DeleteBox } from \"../../components\";\n\n//Hooks\nimport useNutritionMethodsHook from \"./hooks/index\";\n\n//Styles\nimport \"./style.scss\";\n\nconst NutritionMethods = () => {\n  const {\n    getNutritionMethods,\n    deleteNutritionMethod,\n    addNutritionMethod,\n    editNutritionMethod,\n  } = useNutritionMethodsHook();\n\n  const [nutritionMethods, setNutritionMethods] = useState([]);\n  const [addBoxVisible, setAddBoxVisible] = useState(false);\n  const [editBoxVisible, setEditBoxVisible] = useState(false);\n  const [deleteBoxVisible, setDeleteBoxVisible] = useState(false);\n\n  const [nutritionMethodObj, setNutritionMethodObj] = useState({\n    _id: 0,\n    name: \"\",\n    protein: 0,\n    fat: 0,\n    energy: 0,\n    carbs: 0\n  });\n\n  const addFormRef = useRef(null);\n  const editFormRef = useRef(null);\n\n  useEffect(() => {\n    (async () => {\n      const result = await getNutritionMethods();\n\n      if (result) {\n        setNutritionMethods(result);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (addBoxVisible)\n      setNutritionMethodObj({\n        _id: 0,\n        name: \"\",\n        protein: 0,\n        fat: 0,\n        energy: 0,\n        carbs: 0\n      });\n  }, [addBoxVisible]);\n\n  const onClickEdit = (_id) => {\n    const nutritionMethod = nutritionMethods.find((u) => u._id === _id);\n    setNutritionMethodObj(nutritionMethod);\n    setEditBoxVisible(true);\n  };\n  const onClickDelete = (_id) => {\n    setNutritionMethodObj(nutritionMethods.find((u) => u._id === _id));\n    setDeleteBoxVisible(true);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>لوحة التحكم / القيم الغذائية</title>\n      </Helmet>\n      <DeleteBox\n        visible={deleteBoxVisible}\n        setVisible={setDeleteBoxVisible}\n        title={`حذف الأكلة رقم ${nutritionMethodObj._id}`}\n        onDelete={async () => {\n          if (await deleteNutritionMethod(nutritionMethodObj._id)) {\n            setNutritionMethods(\n              nutritionMethods.filter((u) => u._id !== nutritionMethodObj._id)\n            );\n            setDeleteBoxVisible(false);\n          }\n        }}\n      />\n      <DataBox\n        visible={addBoxVisible}\n        setVisible={setAddBoxVisible}\n        options={{\n          title: \"اضافة اكلة جديدة\",\n          onSave: async () => {\n            const nutritionMethod = await addNutritionMethod(addFormRef);\n            if (nutritionMethod) {\n              setNutritionMethods([...nutritionMethods, nutritionMethod]);\n              setAddBoxVisible(false);\n            }\n          },\n          btnSave: \"اضافة\",\n          formRef: addFormRef,\n        }}\n        inputs={[\n          {\n            tag: \"input\",\n            label: \"الاسم\",\n            props: {\n              type: \"text\",\n              name: \"name\",\n              placeholder: \"الاسم\",\n              required: true,\n              maxLength: 100,\n              onChange: (e) =>\n                setNutritionMethodObj({\n                  ...nutritionMethodObj,\n                  name: e.target.value,\n                }),\n            },\n          },\n          {\n            tag: \"input\",\n            label: \"البروتينات\",\n            props: {\n              type: \"number\",\n              name: \"protein\",\n              placeholder: \"البروتينات\",\n              required: true,\n              maxLength: 100,\n              onChange: (e) =>\n                setNutritionMethodObj({\n                  ...nutritionMethodObj,\n                  protein: e.target.value,\n                }),\n            },\n          },\n          {\n            tag: \"input\",\n            label: \"الطاقة\",\n            props: {\n              type: \"number\",\n              name: \"energy\",\n              placeholder: \"الطاقة\",\n              required: true,\n              maxLength: 100,\n              onChange: (e) =>\n                setNutritionMethodObj({\n                  ...nutritionMethodObj,\n                  energy: e.target.value,\n                }),\n            },\n          },\n          {\n            tag: \"input\",\n            label: \"الدهون\",\n            props: {\n              type: \"number\",\n              name: \"fat\",\n              placeholder: \"الدهون\",\n              required: true,\n              maxLength: 100,\n              onChange: (e) =>\n                setNutritionMethodObj({\n                  ...nutritionMethodObj,\n                  fat: e.target.value,\n                }),\n            },\n          },\n          {\n            tag: \"input\",\n            label: \"الكربوهيدرات\",\n            props: {\n              type: \"text\",\n              name: \"carbs\",\n              placeholder: \"الكربوهيدرات\",\n              required: true,\n              maxLength: 100,\n              onChange: (e) =>\n                setNutritionMethodObj({\n                  ...nutritionMethodObj,\n                  carbs: e.target.value,\n                }),\n            },\n          },\n        ]}\n      />\n      <DataBox\n        visible={editBoxVisible}\n        setVisible={setEditBoxVisible}\n        options={{\n          name: `تعديل الأكلة رقم ${nutritionMethodObj._id}`,\n          onSave: async () => {\n            const result = await editNutritionMethod(editFormRef);\n            if (result) {\n              setNutritionMethods(\n                nutritionMethods.map((u) => (u._id === result._id ? result : u))\n              );\n              setEditBoxVisible(false);\n            }\n          },\n          saveBtn: \"تعديل\",\n          formRef: editFormRef,\n        }}\n        inputs={[\n          {\n            tag: \"input\",\n            props: {\n              type: \"hidden\",\n              value: nutritionMethodObj._id,\n              name: \"_id\",\n            },\n          },\n          {\n            tag: \"input\",\n            label: \"الاسم\",\n            props: {\n              type: \"text\",\n              value: nutritionMethodObj.name,\n              name: \"name\",\n              placeholder: \"الاسم\",\n              required: true,\n              maxLength: 100,\n              onChange: (e) =>\n                setNutritionMethodObj({\n                  ...nutritionMethodObj,\n                  name: e.target.value,\n                }),\n            },\n          },\n          {\n            tag: \"input\",\n            label: \"البروتينات\",\n            props: {\n              type: \"number\",\n              value: nutritionMethodObj.protein,\n              name: \"protein\",\n              placeholder: \"البروتينات\",\n              required: true,\n              maxLength: 100,\n              onChange: (e) =>\n                setNutritionMethodObj({\n                  ...nutritionMethodObj,\n                  protein: e.target.value,\n                }),\n            },\n          },\n          {\n            tag: \"input\",\n            label: \"الطاقة\",\n            props: {\n              type: \"number\",\n              value: nutritionMethodObj.energy,\n              name: \"energy\",\n              placeholder: \"الطاقة\",\n              required: true,\n              maxLength: 100,\n              onChange: (e) =>\n                setNutritionMethodObj({\n                  ...nutritionMethodObj,\n                  energy: e.target.value,\n                }),\n            },\n          },\n          {\n            tag: \"input\",\n            label: \"الدهون\",\n            props: {\n              type: \"number\",\n              value: nutritionMethodObj.fat,\n              name: \"fat\",\n              placeholder: \"الدهون\",\n              required: true,\n              maxLength: 100,\n              onChange: (e) =>\n                setNutritionMethodObj({\n                  ...nutritionMethodObj,\n                  fat: e.target.value,\n                }),\n            },\n          },\n          {\n            tag: \"input\",\n            label: \"الكربوهيدرات\",\n            props: {\n              type: \"text\",\n              value: nutritionMethodObj.carbs,\n              name: \"carbs\",\n              placeholder: \"الكربوهيدرات\",\n              required: true,\n              maxLength: 100,\n              onChange: (e) =>\n                setNutritionMethodObj({\n                  ...nutritionMethodObj,\n                  carbs: e.target.value,\n                }),\n            },\n          },\n        ]}\n      />\n      <div className=\"main-container\">\n        <div className=\"page-position\">\n          <h2>لوحة التحكم</h2>\n          <p>/</p>\n          <h6>القيم الغذائية</h6>\n        </div>\n        <div className=\"container\">\n          {/*<SearchBox />*/}\n          <div className=\"add-new\">\n            <button\n              className=\"btn-add-new\"\n              onClick={() => setAddBoxVisible(true)}\n            >\n              أضف جديد\n            </button>\n          </div>\n          <Table\n            actions={{\n              edit: onClickEdit,\n              delete: onClickDelete,\n            }}\n            headers={[\"#\", \"الاسم\", \"البروتينات\", \"الطاقة\", \"الدهون\", \"الكربوهيدرات\"]}\n            data={\n              nutritionMethods &&\n              nutritionMethods.map((u) => [\n                u._id,\n                u.name,\n                u.protein,\n                u.energy,\n                u.fat,\n                u.carbs,\n              ])\n            }\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default NutritionMethods;\n"]},"metadata":{},"sourceType":"module"}