{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useNotifierContext } from \"../../../providers\";\n\nconst useDietsHook = () => {\n  _s();\n\n  const {\n    setNotifiers\n  } = useNotifierContext();\n\n  const getDiets = async () => {\n    try {\n      let response = await axios.post(\"/api/articles/get\");\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({\n          errors: data.errors\n        });\n        return false;\n      }\n\n      return data.articles;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n  /******************************************************/\n\n\n  const deleteDiet = async _id => {\n    try {\n      let response = await axios.post(\"/api/articles/delete\", {\n        _id\n      });\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({\n          errors: data.errors\n        });\n        return false;\n      }\n\n      setNotifiers({\n        success: data.messages\n      });\n      return true;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n  /******************************************************/\n\n\n  const addDiet = async formRef => {\n    try {\n      let dietData = new FormData(formRef.current);\n      let name = dietData.get(\"name\"),\n          ingredients = dietData.get(\"ingredients\"),\n          preparation = dietData.get(\"preparation\"),\n          foodValue = dietData.get(\"foodValue\"),\n          images = dietData.get(\"images\");\n      let response = await axios.post(\"/api/diet/add\", dietData);\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({\n          errors: data.errors\n        });\n        return false;\n      }\n\n      setNotifiers({\n        success: data.messages\n      });\n      return data.hall;\n    } catch (e) {\n      alert(e.message);\n    }\n\n    try {\n      let articleData = new FormData(formRef.current);\n      let response = await axios.post(\"/api/articles/add\", articleData);\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({\n          errors: data.errors\n        });\n        return false;\n      }\n\n      setNotifiers({\n        success: data.messages\n      });\n      return data.article;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n  /******************************************************/\n\n\n  const editDiet = async formRef => {\n    try {\n      let articleData = new FormData(formRef.current);\n      let response = await axios.post(\"/api/articles/edit\", articleData);\n      let data = await response.data;\n      console.log(data);\n\n      if (!data.status) {\n        setNotifiers({\n          errors: data.errors\n        });\n        return false;\n      }\n\n      setNotifiers({\n        success: data.messages\n      });\n      return data.article;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  return {\n    getDiets,\n    deleteDiet,\n    addDiet,\n    editDiet\n  };\n};\n\n_s(useDietsHook, \"Qrog+wafX6oaOESQjnohXpTgwg4=\", false, function () {\n  return [useNotifierContext];\n});\n\nexport default useDietsHook;","map":{"version":3,"sources":["C:/Users/user/Desktop/khamsat/Nouveau dossier/tamreny_project/tamreny/client/src/screens/Diets/hooks/index.js"],"names":["axios","useNotifierContext","useDietsHook","setNotifiers","getDiets","response","post","data","status","errors","articles","e","alert","message","deleteDiet","_id","success","messages","addDiet","formRef","dietData","FormData","current","name","get","ingredients","preparation","foodValue","images","hall","articleData","article","editDiet","console","log"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useNotifierContext } from \"../../../providers\";\n\nconst useDietsHook = () => {\n  const { setNotifiers } = useNotifierContext();\n\n  const getDiets = async () => {\n    try {\n      let response = await axios.post(\"/api/articles/get\");\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({ errors: data.errors });\n        return false;\n      }\n      return data.articles;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  /******************************************************/\n\n  const deleteDiet = async (_id) => {\n    try {\n      let response = await axios.post(\"/api/articles/delete\", { _id });\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({ errors: data.errors });\n        return false;\n      }\n      setNotifiers({ success: data.messages });\n      return true;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  /******************************************************/\n\n  const addDiet = async (formRef) => {\n    try {\n      let dietData = new FormData(formRef.current);\n\n      let name = dietData.get(\"name\"),\n        ingredients = dietData.get(\"ingredients\"),\n        preparation = dietData.get(\"preparation\"),\n        foodValue = dietData.get(\"foodValue\"),\n        images = dietData.get(\"images\");\n\n      let response = await axios.post(\"/api/diet/add\", dietData);\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({ errors: data.errors });\n        return false;\n      }\n      setNotifiers({ success: data.messages });\n      return data.hall;\n    } catch (e) {\n      alert(e.message);\n    }\n\n    try {\n      let articleData = new FormData(formRef.current);\n\n      let response = await axios.post(\"/api/articles/add\", articleData);\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({ errors: data.errors });\n        return false;\n      }\n      setNotifiers({ success: data.messages });\n      return data.article;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n  /******************************************************/\n\n  const editDiet = async (formRef) => {\n    try {\n      let articleData = new FormData(formRef.current);\n\n      let response = await axios.post(\"/api/articles/edit\", articleData);\n      let data = await response.data;\n\n      console.log(data);\n      if (!data.status) {\n        setNotifiers({ errors: data.errors });\n        return false;\n      }\n      setNotifiers({ success: data.messages });\n      return data.article;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  return {\n    getDiets,\n    deleteDiet,\n    addDiet,\n    editDiet,\n  };\n};\n\nexport default useDietsHook;\n"]},"metadata":{},"sourceType":"module"}