{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useNotifierContext } from \"../../../providers\";\n\nconst useOrdersHook = () => {\n  _s();\n\n  const {\n    setNotifiers\n  } = useNotifierContext();\n\n  const getOrders = async () => {\n    try {\n      let response = await axios.post(\"/api/orders/get\");\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({\n          errors: data.errors\n        });\n        return false;\n      }\n\n      return data.orders;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n  /******************************************************/\n\n\n  const deleteOrder = async _id => {\n    try {\n      let response = await axios.post(\"/api/orders/delete\", {\n        _id\n      });\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({\n          errors: data.errors\n        });\n        return false;\n      }\n\n      setNotifiers({\n        success: data.messages\n      });\n      return true;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n  /******************************************************/\n\n\n  const addOrder = async formRef => {\n    try {\n      let orderData = new FormData(formRef.current);\n      let response = await axios.post(\"/api/orders/add\", orderData);\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({\n          errors: data.errors\n        });\n        return false;\n      }\n\n      setNotifiers({\n        success: data.messages\n      });\n      return data.order;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n  /******************************************************/\n\n\n  const editOrder = async formRef => {\n    try {\n      let orderData = new FormData(formRef.current);\n      let response = await axios.post(\"/api/orders/edit\", orderData);\n      let data = await response.data;\n      console.log(data);\n\n      if (!data.status) {\n        setNotifiers({\n          errors: data.errors\n        });\n        return false;\n      }\n\n      setNotifiers({\n        success: data.messages\n      });\n      return data.order;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  return {\n    getOrders,\n    deleteOrder,\n    addOrder,\n    editOrder\n  };\n};\n\n_s(useOrdersHook, \"Qrog+wafX6oaOESQjnohXpTgwg4=\", false, function () {\n  return [useNotifierContext];\n});\n\nexport default useOrdersHook;","map":{"version":3,"sources":["C:/Users/user/Desktop/khamsat/Nouveau dossier/tamreny_project/tamreny/client/src/screens/Orders/hooks/index.js"],"names":["axios","useNotifierContext","useOrdersHook","setNotifiers","getOrders","response","post","data","status","errors","orders","e","alert","message","deleteOrder","_id","success","messages","addOrder","formRef","orderData","FormData","current","order","editOrder","console","log"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useNotifierContext } from \"../../../providers\";\n\nconst useOrdersHook = () => {\n  const { setNotifiers } = useNotifierContext();\n\n  const getOrders = async () => {\n    try {\n      let response = await axios.post(\"/api/orders/get\");\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({ errors: data.errors });\n        return false;\n      }\n      return data.orders;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  /******************************************************/\n\n  const deleteOrder = async (_id) => {\n    try {\n      let response = await axios.post(\"/api/orders/delete\", { _id });\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({ errors: data.errors });\n        return false;\n      }\n      setNotifiers({ success: data.messages });\n      return true;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  /******************************************************/\n\n  const addOrder = async (formRef) => {\n    try {\n      let orderData = new FormData(formRef.current);\n\n      let response = await axios.post(\"/api/orders/add\", orderData);\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({ errors: data.errors });\n        return false;\n      }\n      setNotifiers({ success: data.messages });\n      return data.order;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n  /******************************************************/\n\n  const editOrder = async (formRef) => {\n    try {\n\n      let orderData = new FormData(formRef.current);\n\n      let response = await axios.post(\"/api/orders/edit\", orderData);\n      let data = await response.data;\n\n      console.log(data);\n      if (!data.status) {\n        setNotifiers({ errors: data.errors });\n        return false;\n      }\n      setNotifiers({ success: data.messages });\n      return data.order;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  return {\n    getOrders,\n    deleteOrder,\n    addOrder,\n    editOrder,\n  };\n};\n\nexport default useOrdersHook;\n"]},"metadata":{},"sourceType":"module"}