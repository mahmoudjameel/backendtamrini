{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useNotifierContext } from \"../../../providers\";\n\nconst useDietsHook = () => {\n  _s();\n\n  const {\n    setNotifiers\n  } = useNotifierContext();\n\n  const getDiets = async () => {\n    try {\n      let response = await axios.post(\"/api/diets/get\");\n      let data = await response.data;\n      console.log(data);\n\n      if (!data.status) {\n        setNotifiers({\n          errors: data.errors\n        });\n        return false;\n      }\n\n      return data.diets;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n  /******************************************************/\n\n\n  const deleteDiet = async _id => {\n    try {\n      let response = await axios.post(\"/api/diets/delete\", {\n        _id\n      });\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({\n          errors: data.errors\n        });\n        return false;\n      }\n\n      setNotifiers({\n        success: data.messages\n      });\n      return true;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n  /******************************************************/\n\n\n  const addDiet = async formRef => {\n    try {\n      let dietData = new FormData(formRef.current);\n      console.log(\"vvvvvvvvvvvvvvvvvvvvvvvvv\");\n      console.log(dietData.get(\"name\"));\n      let name = dietData.get(\"name\"),\n          ingredients = dietData.get(\"ingredients\"),\n          preparation = dietData.get(\"preparation\"),\n          foodValue = dietData.get(\"foodValue\"),\n          images = dietData.get(\"images\");\n      console.log(name);\n      let response = await axios.post(\"/api/diets/add\", dietData);\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({\n          errors: data.errors\n        });\n        return false;\n      }\n\n      setNotifiers({\n        success: data.messages\n      });\n      return data.hall;\n    } catch (e) {\n      alert(e.message);\n    } // try {\n    //   let articleData = new FormData(formRef.current);\n    //   let response = await axios.post(\"/api/articles/add\", articleData);\n    //   let data = await response.data;\n    //   if (!data.status) {\n    //     setNotifiers({ errors: data.errors });\n    //     return false;\n    //   }\n    //   setNotifiers({ success: data.messages });\n    //   return data.article;\n    // } catch (e) {\n    //   alert(e.message);\n    // }\n\n  };\n  /******************************************************/\n\n\n  const editDiet = async formRef => {\n    try {\n      let dietData = new FormData(formRef.current);\n      let response = await axios.post(\"/api/diets/edit\", dietData);\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({\n          errors: data.errors\n        });\n        return false;\n      }\n\n      setNotifiers({\n        success: data.messages\n      });\n      return data.diet;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  return {\n    getDiets,\n    deleteDiet,\n    addDiet,\n    editDiet\n  };\n};\n\n_s(useDietsHook, \"Qrog+wafX6oaOESQjnohXpTgwg4=\", false, function () {\n  return [useNotifierContext];\n});\n\nexport default useDietsHook;","map":{"version":3,"sources":["C:/Users/user/Desktop/khamsat/Nouveau dossier/tamreny_project/tamreny/client/src/screens/Diets/hooks/index.js"],"names":["axios","useNotifierContext","useDietsHook","setNotifiers","getDiets","response","post","data","console","log","status","errors","diets","e","alert","message","deleteDiet","_id","success","messages","addDiet","formRef","dietData","FormData","current","get","name","ingredients","preparation","foodValue","images","hall","editDiet","diet"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useNotifierContext } from \"../../../providers\";\n\nconst useDietsHook = () => {\n  const { setNotifiers } = useNotifierContext();\n\n  const getDiets = async () => {\n    try {\n      let response = await axios.post(\"/api/diets/get\");\n      let data = await response.data;\n\n      console.log(data);\n      if (!data.status) {\n        setNotifiers({ errors: data.errors });\n        return false;\n      }\n      return data.diets;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  /******************************************************/\n\n  const deleteDiet = async (_id) => {\n    try {\n      let response = await axios.post(\"/api/diets/delete\", { _id });\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({ errors: data.errors });\n        return false;\n      }\n      setNotifiers({ success: data.messages });\n      return true;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  /******************************************************/\n\n  const addDiet = async (formRef) => {\n    try {\n      let dietData = new FormData(formRef.current);\n\n      console.log(\"vvvvvvvvvvvvvvvvvvvvvvvvv\");\n      console.log(dietData.get(\"name\"));\n\n      let name = dietData.get(\"name\"),\n        ingredients = dietData.get(\"ingredients\"),\n        preparation = dietData.get(\"preparation\"),\n        foodValue = dietData.get(\"foodValue\"),\n        images = dietData.get(\"images\");\n\n      console.log(name);\n      let response = await axios.post(\"/api/diets/add\", dietData);\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({ errors: data.errors });\n        return false;\n      }\n      setNotifiers({ success: data.messages });\n      return data.hall;\n    } catch (e) {\n      alert(e.message);\n    }\n\n    // try {\n    //   let articleData = new FormData(formRef.current);\n\n    //   let response = await axios.post(\"/api/articles/add\", articleData);\n    //   let data = await response.data;\n\n    //   if (!data.status) {\n    //     setNotifiers({ errors: data.errors });\n    //     return false;\n    //   }\n    //   setNotifiers({ success: data.messages });\n    //   return data.article;\n    // } catch (e) {\n    //   alert(e.message);\n    // }\n  };\n  /******************************************************/\n\n  const editDiet = async (formRef) => {\n    try {\n      let dietData = new FormData(formRef.current);\n\n      let response = await axios.post(\"/api/diets/edit\", dietData);\n      let data = await response.data;\n      if (!data.status) {\n        setNotifiers({ errors: data.errors });\n        return false;\n      }\n      setNotifiers({ success: data.messages });\n      return data.diet;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  return {\n    getDiets,\n    deleteDiet,\n    addDiet,\n    editDiet,\n  };\n};\n\nexport default useDietsHook;\n"]},"metadata":{},"sourceType":"module"}