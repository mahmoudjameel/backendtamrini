{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useNotifierContext } from \"../../../providers\";\n\nconst useHallsHook = () => {\n  _s();\n\n  const {\n    setNotifiers\n  } = useNotifierContext();\n\n  const getHalls = async () => {\n    try {\n      let response = await axios.post(\"/api/halls/get\", {\n        type: 1\n      });\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({\n          errors: data.errors\n        });\n        return false;\n      }\n\n      console.log(data);\n      return data.halls;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n  /******************************************************/\n\n\n  const deleteHall = async _id => {\n    try {\n      let response = await axios.post(\"/api/halls/delete\", {\n        _id,\n        type: 1\n      });\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({\n          errors: data.errors\n        });\n        return false;\n      }\n\n      setNotifiers({\n        success: data.messages\n      });\n      return true;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n  /******************************************************/\n\n\n  const addHall = async formRef => {\n    try {\n      let hallData = new FormData(formRef.current);\n      console.log(\"ccc\" + hallData);\n      let subscriptions = hallData.get(\"subscriptions\"),\n          name = hallData.get(\"name\"),\n          city = hallData.get(\"city\"),\n          brief = hallData.get(\"brief\"),\n          lng = hallData.get(\"lng\"),\n          lat = hallData.get(\"lat\"),\n          images = hallData.get(\"images\"); //Manibulate subscriptions\n\n      subscriptions = subscriptions.split(\"\\n\");\n      subscriptions = subscriptions.map(s => ({\n        name: s.split(\",\")[1],\n        price: s.split(\",\")[0]\n      }));\n      hallData.set(\"subscriptions\", JSON.stringify(subscriptions));\n      let location = {\n        lng: lng,\n        lat: lat\n      };\n      hallData.location = location;\n      let response = await axios.post(\"/api/halls/add\", hallData);\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({\n          errors: data.errors\n        });\n        return false;\n      }\n\n      setNotifiers({\n        success: data.messages\n      });\n      return data.hall;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n  /******************************************************/\n\n\n  const editHall = async formRef => {\n    try {\n      let hallData = new FormData(formRef.current);\n      let response = await axios.post(\"/api/halls/edit\", hallData);\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({\n          errors: data.errors\n        });\n        return false;\n      }\n\n      setNotifiers({\n        success: data.messages\n      });\n      return data.hall;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  return {\n    getHalls,\n    deleteHall,\n    addHall,\n    editHall\n  };\n};\n\n_s(useHallsHook, \"Qrog+wafX6oaOESQjnohXpTgwg4=\", false, function () {\n  return [useNotifierContext];\n});\n\nexport default useHallsHook;","map":{"version":3,"sources":["C:/Users/user/Desktop/khamsat/Nouveau dossier/tamreny_project/tamreny/client/src/screens/Halls/hooks/index.js"],"names":["axios","useNotifierContext","useHallsHook","setNotifiers","getHalls","response","post","type","data","status","errors","console","log","halls","e","alert","message","deleteHall","_id","success","messages","addHall","formRef","hallData","FormData","current","subscriptions","get","name","city","brief","lng","lat","images","split","map","s","price","set","JSON","stringify","location","hall","editHall"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useNotifierContext } from \"../../../providers\";\n\nconst useHallsHook = () => {\n  const { setNotifiers } = useNotifierContext();\n\n  const getHalls = async () => {\n    try {\n      let response = await axios.post(\"/api/halls/get\", { type: 1 });\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({ errors: data.errors });\n        return false;\n      }\n      console.log(data);\n      return data.halls;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  /******************************************************/\n\n  const deleteHall = async (_id) => {\n    try {\n      let response = await axios.post(\"/api/halls/delete\", {\n        _id,\n        type: 1,\n      });\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({ errors: data.errors });\n        return false;\n      }\n      setNotifiers({ success: data.messages });\n      return true;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  /******************************************************/\n\n  const addHall = async (formRef) => {\n    try {\n      let hallData = new FormData(formRef.current);\n      console.log(\"ccc\" + hallData);\n\n      let subscriptions = hallData.get(\"subscriptions\"),\n        name = hallData.get(\"name\"),\n        city = hallData.get(\"city\"),\n        brief = hallData.get(\"brief\"),\n        lng = hallData.get(\"lng\"),\n        lat = hallData.get(\"lat\"),\n        images = hallData.get(\"images\");\n      //Manibulate subscriptions\n      subscriptions = subscriptions.split(\"\\n\");\n      subscriptions = subscriptions.map((s) => ({\n        name: s.split(\",\")[1],\n        price: s.split(\",\")[0],\n      }));\n      hallData.set(\"subscriptions\", JSON.stringify(subscriptions));\n\n      let location = { lng: lng, lat: lat };\n      hallData.location = location;\n\n      let response = await axios.post(\"/api/halls/add\", hallData);\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({ errors: data.errors });\n        return false;\n      }\n      setNotifiers({ success: data.messages });\n      return data.hall;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n  /******************************************************/\n\n  const editHall = async (formRef) => {\n    try {\n      let hallData = new FormData(formRef.current);\n\n      let response = await axios.post(\"/api/halls/edit\", hallData);\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({ errors: data.errors });\n        return false;\n      }\n      setNotifiers({ success: data.messages });\n      return data.hall;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  return {\n    getHalls,\n    deleteHall,\n    addHall,\n    editHall,\n  };\n};\n\nexport default useHallsHook;\n"]},"metadata":{},"sourceType":"module"}