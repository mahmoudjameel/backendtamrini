{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useNotifierContext } from \"../../../providers\";\n\nconst useProductsHook = () => {\n  _s();\n\n  const {\n    setNotifiers\n  } = useNotifierContext();\n\n  const getCategories = async () => {\n    try {\n      let response = await axios.post(\"/api/product-categories/get\");\n      let data = await response.data;\n\n      if (!data.status) {\n        // setNotifiers({ errors: data.errors });\n        return false;\n      }\n\n      return data.products;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  const getProducts = async () => {\n    try {\n      let response = await axios.post(\"/api/products/get\");\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({\n          errors: data.errors\n        });\n        return false;\n      }\n\n      return data.products;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n  /******************************************************/\n\n\n  const deleteProduct = async _id => {\n    try {\n      let response = await axios.post(\"/api/products/delete\", {\n        _id\n      });\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({\n          errors: data.errors\n        });\n        return false;\n      }\n\n      setNotifiers({\n        success: data.messages\n      });\n      return true;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n  /******************************************************/\n\n\n  const addProduct = async formRef => {\n    try {\n      let productData = new FormData(formRef.current);\n      let response = await axios.post(\"/api/products/add\", productData);\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({\n          errors: data.errors\n        });\n        return false;\n      }\n\n      setNotifiers({\n        success: data.messages\n      });\n      return data.product;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n  /******************************************************/\n\n\n  const editProduct = async formRef => {\n    try {\n      let productData = new FormData(formRef.current);\n      let response = await axios.post(\"/api/products/edit\", productData);\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({\n          errors: data.errors\n        });\n        return false;\n      }\n\n      setNotifiers({\n        success: data.messages\n      });\n      return data.product;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  return {\n    getProducts,\n    deleteProduct,\n    addProduct,\n    editProduct,\n    getCategories\n  };\n};\n\n_s(useProductsHook, \"Qrog+wafX6oaOESQjnohXpTgwg4=\", false, function () {\n  return [useNotifierContext];\n});\n\nexport default useProductsHook;","map":{"version":3,"sources":["C:/Users/user/Desktop/khamsat/Nouveau dossier/tamreny_project/tamreny/client/src/screens/Products/hooks/index.js"],"names":["axios","useNotifierContext","useProductsHook","setNotifiers","getCategories","response","post","data","status","products","e","alert","message","getProducts","errors","deleteProduct","_id","success","messages","addProduct","formRef","productData","FormData","current","product","editProduct"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useNotifierContext } from \"../../../providers\";\n\nconst useProductsHook = () => {\n  const { setNotifiers } = useNotifierContext();\n\n  const getCategories = async () => {\n    try {\n      let response = await axios.post(\"/api/product-categories/get\");\n      let data = await response.data;\n\n      if (!data.status) {\n        // setNotifiers({ errors: data.errors });\n        return false;\n      }\n      return data.products;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  const getProducts = async () => {\n    try {\n      let response = await axios.post(\"/api/products/get\");\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({ errors: data.errors });\n        return false;\n      }\n      return data.products;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  /******************************************************/\n\n  const deleteProduct = async _id => {\n    try {\n      let response = await axios.post(\"/api/products/delete\", { _id });\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({ errors: data.errors });\n        return false;\n      }\n      setNotifiers({ success: data.messages });\n      return true;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  /******************************************************/\n\n  const addProduct = async formRef => {\n    try {\n      let productData = new FormData(formRef.current);\n\n      let response = await axios.post(\"/api/products/add\", productData);\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({ errors: data.errors });\n        return false;\n      }\n      setNotifiers({ success: data.messages });\n      return data.product;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n  /******************************************************/\n\n  const editProduct = async formRef => {\n    try {\n      let productData = new FormData(formRef.current);\n\n      let response = await axios.post(\"/api/products/edit\", productData);\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({ errors: data.errors });\n        return false;\n      }\n      setNotifiers({ success: data.messages });\n      return data.product;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  return {\n    getProducts,\n    deleteProduct,\n    addProduct,\n    editProduct,\n    getCategories\n  };\n};\n\nexport default useProductsHook;\n"]},"metadata":{},"sourceType":"module"}