{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\khamsat\\\\Nouveau dossier\\\\tamreny_project\\\\tamreny\\\\client\\\\src\\\\screens\\\\Diets\\\\Diets.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Table, DataBox, SearchBox, DeleteBox } from \"../../components\"; //Hooks\n\nimport useDietsHook from \"./hooks/index\"; //Styles\n\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Diets = () => {\n  _s();\n\n  const {\n    getDiets,\n    deleteDiet,\n    addDiet,\n    editDiet\n  } = useDietsHook();\n  const [diets, setDiets] = useState([]);\n  const [addBoxVisible, setAddBoxVisible] = useState(false);\n  const [editBoxVisible, setEditBoxVisible] = useState(false);\n  const [deleteBoxVisible, setDeleteBoxVisible] = useState(false);\n  const [dietObj, setdietObj] = useState({\n    _id: 0,\n    name: \"\",\n    ingredients: \"\",\n    preparation: \"\",\n    foodValue: \"\",\n    images: [],\n    createDate: \"\"\n  });\n  const addFormRef = useRef(null);\n  const editFormRef = useRef(null);\n  useEffect(() => {\n    (async () => {\n      const result = await getDiets();\n\n      if (result) {\n        setDiets(result);\n      }\n    })();\n  }, []);\n  useEffect(() => {\n    if (addBoxVisible) setdietObj({\n      _id: 0,\n      name: \"\",\n      ingredients: \"\",\n      mainImage: \"\",\n      createDate: \"\"\n    });\n  }, [addBoxVisible]);\n\n  const onClickEdit = _id => {\n    const article = diets.find(u => u._id === _id);\n    setdietObj(article);\n    setEditBoxVisible(true);\n  };\n\n  const onClickDelete = _id => {\n    setdietObj(diets.find(u => u._id === _id));\n    setDeleteBoxVisible(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\\u0644\\u0648\\u062D\\u0629 \\u0627\\u0644\\u062A\\u062D\\u0643\\u0645/ \\u0627\\u0643\\u0644\\u0627\\u062A \\u062F\\u0627\\u064A\\u062A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteBox, {\n      visible: deleteBoxVisible,\n      setVisible: setDeleteBoxVisible,\n      title: `حذف المقالة رقم ${dietObj._id}`,\n      onDelete: async () => {\n        console.log(\"cccccccc \" + addFormRef);\n\n        if (await deleteDiet(dietObj._id)) {\n          setDiets(diets.filter(u => u._id !== dietObj._id));\n          setDeleteBoxVisible(false);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataBox, {\n      visible: addBoxVisible,\n      setVisible: setAddBoxVisible,\n      options: {\n        title: \"اضافة مقال جديد\",\n        onSave: async () => {\n          console.log(addFormRef);\n          const diet = await addDiet(addFormRef);\n\n          if (diet) {\n            setDiets([...diets, diet]);\n            setAddBoxVisible(false);\n          }\n        },\n        btnSave: \"اضافة\",\n        formRef: addFormRef\n      },\n      inputs: [{\n        tag: \"input\",\n        label: \"اسم الاكلة \",\n        props: {\n          type: \"text\",\n          name: \"name\",\n          maxLength: 100,\n          placeholder: \" اسم الاكلة\",\n          required: true,\n          onChange: e => setdietObj({ ...dietObj,\n            name: e.target.value\n          })\n        }\n      }, {\n        tag: \"textarea\",\n        label: \" المكونات\",\n        props: {\n          type: \"text\",\n          name: \"ingredients\",\n          placeholder: \" المكونات\",\n          required: true,\n          onChange: e => setdietObj({ ...dietObj,\n            ingredients: e.target.value\n          })\n        }\n      }, {\n        tag: \"textarea\",\n        label: \" طريقة التحضير\",\n        props: {\n          type: \"text\",\n          name: \"content\",\n          placeholder: \" طريقة التحضير\",\n          required: true,\n          onChange: e => setdietObj({ ...dietObj,\n            preparation: e.target.value\n          })\n        }\n      }, {\n        tag: \"textarea\",\n        label: \" القيمة الغذائية\",\n        props: {\n          type: \"text\",\n          name: \"content\",\n          placeholder: \" القيمة الغذائية\",\n          required: true,\n          onChange: e => setdietObj({ ...dietObj,\n            foodValue: e.target.value\n          })\n        }\n      }, {\n        tag: \"input\",\n        label: \"الصور\",\n        props: {\n          type: \"file\",\n          accept: \".jpg, .png, .jpeg\",\n          name: \"images\",\n          placeholder: \"الصور\",\n          multiple: true,\n          required: true,\n          onChange: e => setdietObj({ ...dietObj,\n            images: e.target.files\n          })\n        }\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataBox, {\n      visible: editBoxVisible,\n      setVisible: setEditBoxVisible,\n      options: {\n        title: `تعديل المقال رقم ${dietObj._id}`,\n        onSave: async () => {\n          console.log(\"cccccccc \" + addFormRef);\n          const result = await editDiet(editFormRef);\n\n          if (result) {\n            setDiets(diets.map(u => u._id === result._id ? result : u));\n            setEditBoxVisible(false);\n          }\n        },\n        saveBtn: \"تعديل\",\n        formRef: editFormRef,\n        images: dietObj.mainImage\n      },\n      inputs: [{\n        tag: \"input\",\n        props: {\n          type: \"hidden\",\n          value: dietObj._id,\n          name: \"_id\"\n        }\n      }, {\n        tag: \"input\",\n        label: \"عنوان المقال\",\n        props: {\n          type: \"text\",\n          value: dietObj.name,\n          name: \"title\",\n          placeholder: \"عنوان المقال\",\n          required: true,\n          maxLength: 100,\n          onChange: e => setdietObj({ ...dietObj,\n            name: e.target.value\n          })\n        }\n      }, {\n        tag: \"textarea\",\n        label: \"محتوي المقال\",\n        props: {\n          type: \"text\",\n          value: dietObj.ingredients,\n          name: \"content\",\n          placeholder: \"محتوي المقال\",\n          required: true,\n          onChange: e => setdietObj({ ...dietObj,\n            ingredients: e.target.value\n          })\n        }\n      }, {\n        tag: \"input\",\n        label: \"الصورة المصغرة\",\n        props: {\n          type: \"file\",\n          accept: \".jpg, .png, .jpeg\",\n          placeholder: \"الصورة المصغرة\",\n          name: \"mainImage\",\n          multiple: true,\n          onChange: e => setdietObj({ ...dietObj,\n            images: URL.createObjectURL(e.target.files[0])\n          })\n        }\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-position\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0644\\u0648\\u062D\\u0629 \\u0627\\u0644\\u062A\\u062D\\u0643\\u0645\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \" \\u0627\\u0643\\u0644\\u0627\\u062A \\u062F\\u0627\\u064A\\u062A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-new\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-add-new\",\n            onClick: () => setAddBoxVisible(true),\n            children: \"\\u0623\\u0636\\u0641 \\u062C\\u062F\\u064A\\u062F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          actions: {\n            edit: onClickEdit,\n            delete: onClickDelete\n          },\n          headers: [\"#\", \"الصورة المصغرة\", \"عنوان المقال\", \"محتوي المقال\", \"تاريخ الإضافة\"],\n          data: diets && diets.map(u => [u._id, {\n            type: \"slider\",\n            images: u.mainImage\n          }, u.title, u.content, u.createDate])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Diets, \"MX6cyC1+zd0f2tqnkWphmwsQrnY=\", false, function () {\n  return [useDietsHook];\n});\n\n_c = Diets;\nexport default Diets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Diets\");","map":{"version":3,"sources":["C:/Users/user/Desktop/khamsat/Nouveau dossier/tamreny_project/tamreny/client/src/screens/Diets/Diets.jsx"],"names":["useState","useEffect","useRef","Helmet","Table","DataBox","SearchBox","DeleteBox","useDietsHook","Diets","getDiets","deleteDiet","addDiet","editDiet","diets","setDiets","addBoxVisible","setAddBoxVisible","editBoxVisible","setEditBoxVisible","deleteBoxVisible","setDeleteBoxVisible","dietObj","setdietObj","_id","name","ingredients","preparation","foodValue","images","createDate","addFormRef","editFormRef","result","mainImage","onClickEdit","article","find","u","onClickDelete","console","log","filter","title","onSave","diet","btnSave","formRef","tag","label","props","type","maxLength","placeholder","required","onChange","e","target","value","accept","multiple","files","map","saveBtn","URL","createObjectURL","edit","delete","content"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Table, DataBox, SearchBox, DeleteBox } from \"../../components\";\r\n\r\n//Hooks\r\nimport useDietsHook from \"./hooks/index\";\r\n\r\n//Styles\r\nimport \"./style.scss\";\r\n\r\nconst Diets = () => {\r\n  const {\r\n    getDiets,\r\n    deleteDiet,\r\n    addDiet,\r\n    editDiet,\r\n  } = useDietsHook();\r\n\r\n  const [diets, setDiets] = useState([]);\r\n  const [addBoxVisible, setAddBoxVisible] = useState(false);\r\n  const [editBoxVisible, setEditBoxVisible] = useState(false);\r\n  const [deleteBoxVisible, setDeleteBoxVisible] = useState(false);\r\n\r\n  const [dietObj, setdietObj] = useState({\r\n    _id: 0,\r\n    name: \"\",\r\n    ingredients: \"\",\r\n    preparation:\"\",\r\n    foodValue:\"\",\r\n    images: [],\r\n    createDate: \"\",\r\n  });\r\n\r\n  const addFormRef = useRef(null);\r\n  const editFormRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const result = await getDiets();\r\n\r\n      if (result) {\r\n        setDiets(result);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (addBoxVisible)\r\n      setdietObj({\r\n        _id: 0,\r\n        name: \"\",\r\n        ingredients: \"\",\r\n        mainImage: \"\",\r\n        createDate: \"\",\r\n      });\r\n  }, [addBoxVisible]);\r\n\r\n  const onClickEdit = (_id) => {\r\n    const article = diets.find((u) => u._id === _id);\r\n    setdietObj(article);\r\n    setEditBoxVisible(true);\r\n  };\r\n  const onClickDelete = (_id) => {\r\n    setdietObj(diets.find((u) => u._id === _id));\r\n    setDeleteBoxVisible(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>لوحة التحكم/ اكلات دايت</title>\r\n      </Helmet>\r\n      <DeleteBox\r\n        visible={deleteBoxVisible}\r\n        setVisible={setDeleteBoxVisible}\r\n        title={`حذف المقالة رقم ${dietObj._id}`}\r\n        onDelete={async () => {\r\n          console.log(\"cccccccc \" + addFormRef)\r\n          if (await deleteDiet(dietObj._id)) {\r\n            setDiets(diets.filter((u) => u._id !== dietObj._id));\r\n            setDeleteBoxVisible(false);\r\n          }\r\n        }}\r\n      />\r\n      <DataBox\r\n        visible={addBoxVisible}\r\n        setVisible={setAddBoxVisible}\r\n        options={{\r\n          title: \"اضافة مقال جديد\",\r\n          onSave: async () => {\r\n            console.log(addFormRef)\r\n            const diet = await addDiet(addFormRef);\r\n            if (diet) {\r\n              setDiets([...diets, diet]);\r\n              setAddBoxVisible(false);\r\n            }\r\n          },\r\n          btnSave: \"اضافة\",\r\n          formRef: addFormRef,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            label: \"اسم الاكلة \",\r\n\r\n            props: {\r\n              type: \"text\",\r\n              name: \"name\",\r\n              maxLength: 100,\r\n              placeholder: \" اسم الاكلة\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setdietObj({ ...dietObj, name: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \" المكونات\",\r\n            props: {\r\n              type: \"text\",\r\n              name: \"ingredients\",\r\n              placeholder: \" المكونات\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setdietObj({ ...dietObj, ingredients: e.target.value }),\r\n            },\r\n          },\r\n\r\n          {\r\n            tag: \"textarea\",\r\n            label: \" طريقة التحضير\",\r\n            props: {\r\n              type: \"text\",\r\n              name: \"content\",\r\n              placeholder: \" طريقة التحضير\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setdietObj({ ...dietObj, preparation: e.target.value }),\r\n            },\r\n          },\r\n          \r\n          {\r\n            tag: \"textarea\",\r\n            label: \" القيمة الغذائية\",\r\n            props: {\r\n              type: \"text\",\r\n              name: \"content\",\r\n              placeholder: \" القيمة الغذائية\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setdietObj({ ...dietObj, foodValue: e.target.value }),\r\n            },\r\n          },\r\n\r\n          {\r\n            tag: \"input\",\r\n            label: \"الصور\",\r\n            props: {\r\n              type: \"file\",\r\n              accept: \".jpg, .png, .jpeg\",\r\n              name: \"images\",\r\n              placeholder: \"الصور\",\r\n              multiple: true,\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setdietObj({\r\n                  ...dietObj,\r\n                  images: e.target.files,\r\n                }),\r\n            },\r\n          },\r\n          \r\n        ]}\r\n      />\r\n      <DataBox\r\n        visible={editBoxVisible}\r\n        setVisible={setEditBoxVisible}\r\n        options={{\r\n          title: `تعديل المقال رقم ${dietObj._id}`,\r\n          onSave: async () => {\r\n            console.log(\"cccccccc \" + addFormRef)\r\n            const result = await editDiet(editFormRef);\r\n            if (result) {\r\n              setDiets(\r\n                diets.map((u) => (u._id === result._id ? result : u))\r\n              );\r\n              setEditBoxVisible(false);\r\n            }\r\n          },\r\n          saveBtn: \"تعديل\",\r\n          formRef: editFormRef,\r\n          images: dietObj.mainImage,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            props: {\r\n              type: \"hidden\",\r\n              value: dietObj._id,\r\n              name: \"_id\",\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"عنوان المقال\",\r\n            props: {\r\n              type: \"text\",\r\n              value: dietObj.name,\r\n              name: \"title\",\r\n              placeholder: \"عنوان المقال\",\r\n              required: true,\r\n              maxLength: 100,\r\n              onChange: (e) =>\r\n                setdietObj({ ...dietObj, name: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"محتوي المقال\",\r\n            props: {\r\n              type: \"text\",\r\n              value: dietObj.ingredients,\r\n              name: \"content\",\r\n              placeholder: \"محتوي المقال\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setdietObj({ ...dietObj, ingredients: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الصورة المصغرة\",\r\n            props: {\r\n              type: \"file\",\r\n              accept: \".jpg, .png, .jpeg\",\r\n              placeholder: \"الصورة المصغرة\",\r\n              name: \"mainImage\",\r\n              multiple: true,\r\n              onChange: (e) =>\r\n                setdietObj({\r\n                  ...dietObj,\r\n                  images: URL.createObjectURL(e.target.files[0]),\r\n                }),\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <div className=\"main-container\">\r\n        <div className=\"page-position\">\r\n          <h2>لوحة التحكم</h2>\r\n          <p>/</p>\r\n          <h6> اكلات دايت</h6>\r\n        </div>\r\n        <div className=\"container\">\r\n          {/*<SearchBox />*/}\r\n          <div className=\"add-new\">\r\n            <button\r\n              className=\"btn-add-new\"\r\n              onClick={() => setAddBoxVisible(true)}\r\n            >\r\n              أضف جديد\r\n            </button>\r\n          </div>\r\n          <Table\r\n            actions={{\r\n              edit: onClickEdit,\r\n              delete: onClickDelete,\r\n            }}\r\n            headers={[\r\n              \"#\",\r\n              \"الصورة المصغرة\",\r\n              \"عنوان المقال\",\r\n              \"محتوي المقال\",\r\n              \"تاريخ الإضافة\",\r\n            ]}\r\n            data={\r\n              diets &&\r\n              diets.map((u) => [\r\n                u._id,\r\n                { type: \"slider\", images: u.mainImage },\r\n                u.title,\r\n                u.content,\r\n                u.createDate,\r\n              ])\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Diets;\r\n"]},"metadata":{},"sourceType":"module"}