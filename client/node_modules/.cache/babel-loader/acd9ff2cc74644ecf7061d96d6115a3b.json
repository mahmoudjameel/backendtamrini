{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\khamsat\\\\Nouveau dossier\\\\tamreny_project\\\\tamreny\\\\client\\\\src\\\\components\\\\DataBox\\\\DataBox.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Pagination, A11y } from \"swiper\";\nimport GoogleMapReact from \"google-map-react\"; //Style\n\nimport \"./style.scss\";\nimport \"swiper/swiper.scss\";\nimport \"swiper/components/navigation/navigation.scss\";\nimport \"swiper/components/pagination/pagination.scss\";\nimport \"swiper/components/scrollbar/scrollbar.scss\"; //Assets\n// @ts-ignore\n\nimport LocationMark from \"../../assets/img/location-mark.svg\";\nimport MapSearchBox from \"../MapSearchBox/MapSearchBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSwiperCore.use([Pagination, A11y]);\n\nconst DataBox = ({\n  options,\n  inputs,\n  visible,\n  setVisible\n}) => {\n  _s();\n\n  const dataBoxRef = useRef(null);\n  const inputFileRef = useRef(null);\n  const [dataUrls, setDataUrls] = useState([]);\n  useEffect(() => {\n    if (options.images) bufferToImage({\n      images: options.images\n    }); // window.addEventListener(\"mouseup\", containerHandler);\n  }, []);\n\n  const containerHandler = e => {\n    e.preventDefault();\n\n    if (dataBoxRef.current && !dataBoxRef.current.contains(e.target)) {\n      setVisible(false);\n      setDataUrls([]);\n    }\n  };\n\n  const bufferToImage = async ({\n    images = []\n  }) => {\n    if (images.length != 0) {\n      for (let i = 0; i < images.length; i++) {\n        let blob = await fetch(images[i]).then(r => r.blob());\n        let reader = new FileReader();\n        reader.readAsDataURL(blob);\n\n        reader.onload = () => {\n          setDataUrls([...dataUrls, reader.result]);\n          inputFileRef.current && inputFileRef.current.files.append(reader.result);\n        };\n      }\n    }\n\n    if (inputFileRef.current) for (let i = 0; i < inputFileRef.current.files.length; i++) {\n      let reader = new FileReader();\n      reader.readAsDataURL(inputFileRef.current.files[i]);\n\n      reader.onload = () => {\n        setDataUrls([...dataUrls, reader.result]);\n      };\n    }\n  };\n\n  const [map, setMap] = useState(false);\n  const [maps, setMaps] = useState(null);\n  const [isApiReady, setIsApiReady] = useState(null);\n\n  const apiIsLoaded = (map, maps) => {\n    if (map && maps) {\n      setMap(map);\n      setMaps(maps);\n      setIsApiReady(true);\n    }\n  };\n\n  return visible && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"float-box-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-box\",\n      ref: dataBoxRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"closing\",\n        onClick: () => setVisible(false),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"POST\",\n        onSubmit: e => e.preventDefault(),\n        ref: options.formRef,\n        children: [options.title && /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: options.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-items\",\n          children: [inputs.length !== 0 && inputs.map((input, i) => input.tag === \"input\" ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-item\",\n              children: [input.label && /*#__PURE__*/_jsxDEV(\"label\", {\n                children: input.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input.props,\n                ref: input.props.type == \"file\" ? inputFileRef : null,\n                onChange: input.props.type == \"file\" ? bufferToImage : input.props.onChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 23\n            }, this), input.props.type == \"file\" && dataUrls.length != 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-item\",\n              children: /*#__PURE__*/_jsxDEV(Swiper, {\n                spaceBetween: 0,\n                slidesPerView: 1,\n                pagination: {\n                  clickable: true\n                },\n                children: dataUrls.map((url, i) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"slider-img\",\n                    src: url\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 33\n                  }, this)\n                }, \"swipe-\" + i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 31\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 25\n            }, this)]\n          }, \"frag-\" + i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this) : input.tag === \"select\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select-item\",\n            children: [input.label && /*#__PURE__*/_jsxDEV(\"label\", {\n              children: input.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", { ...input.props,\n              style: {\n                width: input.label ? \"250px\" : \"100%\"\n              },\n              children: input.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, \"option-\" + i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 23\n            }, this)]\n          }, \"select-\" + i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 21\n          }, this) : input.tag === \"textarea\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-item\",\n            style: {\n              alignItems: \"flex-start\"\n            },\n            children: [input.label && /*#__PURE__*/_jsxDEV(\"label\", {\n              children: input.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", { ...input.props,\n              style: {\n                height: 250,\n                minWidth: \"auto\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 23\n            }, this)]\n          }, \"textarea-\" + i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this) : input.tag == \"location\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-box\",\n            children: [isApiReady && /*#__PURE__*/_jsxDEV(MapSearchBox, {\n              placeholder: \"Search\",\n              googlemaps: maps,\n              map: map,\n              isApiReady: isApiReady,\n              onPlacesChanged: (lat, lng) => {\n                map.setCenter();\n                input.setLocation({\n                  lng,\n                  lat\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(GoogleMapReact // options={map => ({ mapTypeId: map.MapTypeId.SATELLITE })}\n            , {\n              bootstrapURLKeys: {\n                key: \"AIzaSyA6pHHk3EgQKrcr0iVwrfmAxVrqwPPnc2Y\",\n                libraries: ['places'].join(',')\n              },\n              yesIWantToUseGoogleMapApiInternals: true,\n              onGoogleApiLoaded: ({\n                map,\n                maps\n              }) => apiIsLoaded(map, maps),\n              center: {\n                lat: input.lat,\n                lng: input.lng\n              },\n              defaultZoom: 16,\n              onClick: data => {\n                input.setLocation({\n                  lng: data.lng,\n                  lat: data.lat\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: LocationMark,\n                lat: input.lat,\n                lng: input.lng,\n                className: \"mark-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 23\n            }, this)]\n          }, \"location-\" + i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {}, \"frag-\" + i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 21\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-item\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"save-btn\",\n              type: \"submit\",\n              onClick: options.onSave,\n              children: options.btnSave || \"حفظ\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 7\n  }, this);\n};\n\n_s(DataBox, \"l495pNSjxiV5CEsBT/ia626hhDQ=\");\n\n_c = DataBox;\nexport default DataBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataBox\");","map":{"version":3,"sources":["C:/Users/user/Desktop/khamsat/Nouveau dossier/tamreny_project/tamreny/client/src/components/DataBox/DataBox.jsx"],"names":["React","useEffect","useRef","useState","Swiper","SwiperSlide","SwiperCore","Pagination","A11y","GoogleMapReact","MapSearchBox","use","DataBox","options","inputs","visible","setVisible","dataBoxRef","inputFileRef","dataUrls","setDataUrls","images","bufferToImage","containerHandler","e","preventDefault","current","contains","target","length","i","blob","fetch","then","r","reader","FileReader","readAsDataURL","onload","result","files","append","map","setMap","maps","setMaps","isApiReady","setIsApiReady","apiIsLoaded","formRef","title","input","tag","label","props","type","onChange","clickable","url","width","option","value","alignItems","height","minWidth","lat","lng","setCenter","setLocation","key","libraries","join","data","LocationMark","onSave","btnSave"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Pagination, A11y } from \"swiper\";\nimport GoogleMapReact from \"google-map-react\";\n\n//Style\nimport \"./style.scss\";\nimport \"swiper/swiper.scss\";\nimport \"swiper/components/navigation/navigation.scss\";\nimport \"swiper/components/pagination/pagination.scss\";\nimport \"swiper/components/scrollbar/scrollbar.scss\";\n\n//Assets\n// @ts-ignore\nimport LocationMark from \"../../assets/img/location-mark.svg\";\nimport MapSearchBox from \"../MapSearchBox/MapSearchBox\";\n\nSwiperCore.use([Pagination, A11y]);\n\nconst DataBox = ({ options, inputs, visible, setVisible }) => {\n  const dataBoxRef = useRef(null);\n  const inputFileRef = useRef(null);\n\n  const [dataUrls, setDataUrls] = useState([]);\n\n  useEffect(() => {\n    if (options.images) bufferToImage({ images: options.images });\n\n    // window.addEventListener(\"mouseup\", containerHandler);\n  }, []);\n\n  const containerHandler = (e) => {\n    e.preventDefault();\n\n    if (dataBoxRef.current && !dataBoxRef.current.contains(e.target)) {\n      setVisible(false);\n      setDataUrls([]);\n    }\n  };\n\n  const bufferToImage = async ({ images = [] }) => {\n    if (images.length != 0) {\n      for (let i = 0; i < images.length; i++) {\n        let blob = await fetch(images[i]).then((r) => r.blob());\n        let reader = new FileReader();\n        reader.readAsDataURL(blob);\n        reader.onload = () => {\n          setDataUrls([...dataUrls, reader.result]);\n          inputFileRef.current &&\n            inputFileRef.current.files.append(reader.result);\n        };\n      }\n    }\n\n    if (inputFileRef.current)\n      for (let i = 0; i < inputFileRef.current.files.length; i++) {\n        let reader = new FileReader();\n        reader.readAsDataURL(inputFileRef.current.files[i]);\n        reader.onload = () => {\n          setDataUrls([...dataUrls, reader.result]);\n        };\n      }\n  };\n\n  const [map, setMap] = useState(false)\n  const [maps, setMaps] = useState(null)\n  const [isApiReady, setIsApiReady] = useState(null)\n\n  const apiIsLoaded = (map, maps) => {\n    if(map && maps) {\n      setMap(map);\n      setMaps(maps);\n      setIsApiReady(true);\n    }\n  }\n\n  return (\n    visible && (\n      <div className=\"float-box-container\">\n        <div className=\"data-box\" ref={dataBoxRef}>\n          <div className=\"closing\" onClick={() => setVisible(false)}>\n            <span></span>\n            <span></span>\n          </div>\n          <form\n            method=\"POST\"\n            onSubmit={(e) => e.preventDefault()}\n            ref={options.formRef}\n          >\n            {options.title && <h3>{options.title}</h3>}\n            <div className=\"input-items\">\n              {inputs.length !== 0 &&\n                inputs.map((input, i) =>\n                  input.tag === \"input\" ? (\n                    <React.Fragment key={\"frag-\" + i}>\n                      <div className=\"input-item\">\n                        {input.label && <label>{input.label}</label>}\n                        <input\n                          {...input.props}\n                          ref={input.props.type == \"file\" ? inputFileRef : null}\n                          onChange={\n                            input.props.type == \"file\"\n                              ? bufferToImage\n                              : input.props.onChange\n                          }\n                        />\n                      </div>\n                      {input.props.type == \"file\" && dataUrls.length != 0 && (\n                        <div className=\"input-item\">\n                          <Swiper\n                            spaceBetween={0}\n                            slidesPerView={1}\n                            pagination={{ clickable: true }}\n                          >\n                            {dataUrls.map((url, i) => (\n                              <SwiperSlide key={\"swipe-\" + i}>\n                                <img className=\"slider-img\" key={i} src={url} />\n                              </SwiperSlide>\n                            ))}\n                          </Swiper>\n                        </div>\n                      )}\n                    </React.Fragment>\n                  ) : input.tag === \"select\" ? (\n                    <div className=\"select-item\" key={\"select-\" + i}>\n                      {input.label && <label>{input.label}</label>}\n                      <select\n                        {...input.props}\n                        style={{ width: input.label ? \"250px\" : \"100%\" }}\n                      >\n                        {input.options.map((option) => (\n                          <option key={\"option-\" + i} value={option.value}>\n                            {option.label}\n                          </option>\n                        ))}\n                      </select>\n                      <span></span>\n                    </div>\n                  ) : input.tag === \"textarea\" ? (\n                    <div\n                      className=\"input-item\"\n                      style={{ alignItems: \"flex-start\" }}\n                      key={\"textarea-\" + i}\n                    >\n                      {input.label && <label>{input.label}</label>}\n\n                      <textarea\n                        {...input.props}\n                        style={{ height: 250, minWidth: \"auto\" }}\n                      ></textarea>\n                    </div>\n                  ) : input.tag == \"location\" ? (\n                    <div className=\"map-box\" key={\"location-\" + i}>\n                      {\n                        isApiReady && (\n                          <MapSearchBox\n                            placeholder=\"Search\"\n                            googlemaps={maps}\n                            map={map}\n                            isApiReady={isApiReady}\n                            onPlacesChanged={(lat, lng) => {\n                              map.setCenter()\n                              input.setLocation({ lng, lat });\n                            }}\n                          />\n                        )\n                      }\n                      <GoogleMapReact\n                        // options={map => ({ mapTypeId: map.MapTypeId.SATELLITE })}\n                        bootstrapURLKeys={{\n                          key: \"AIzaSyA6pHHk3EgQKrcr0iVwrfmAxVrqwPPnc2Y\",\n                          libraries: ['places'].join(','),\n                        }}\n                        yesIWantToUseGoogleMapApiInternals\n                        onGoogleApiLoaded={({ map, maps }) => apiIsLoaded(map, maps)}\n                        center={{\n                          lat: input.lat,\n                          lng: input.lng,\n                        }}\n                        defaultZoom={16}\n                        onClick={(data) => {\n                          input.setLocation({ lng: data.lng, lat: data.lat });\n                        }}\n                      >\n                        <img\n                          src={LocationMark}\n                          lat={input.lat}\n                          lng={input.lng}\n                          className=\"mark-img\"\n                        />\n                      </GoogleMapReact>\n                    </div>\n                  ) : (\n                    <React.Fragment key={\"frag-\" + i}></React.Fragment>\n                  )\n                )}\n              <div className=\"input-item\">\n                <button\n                  className=\"save-btn\"\n                  type=\"submit\"\n                  onClick={options.onSave}\n                >\n                  {options.btnSave || \"حفظ\"}\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  );\n};\nexport default DataBox;\n"]},"metadata":{},"sourceType":"module"}