{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useNotifierContext } from \"../../../providers\";\n\nconst useImageExercisesHook = () => {\n  _s();\n\n  const {\n    setNotifiers\n  } = useNotifierContext();\n\n  const getImageExercises = async () => {\n    try {\n      let response = await axios.post(\"/api/home-exercise/get\", {\n        type: 1\n      });\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({\n          errors: data.errors\n        });\n        return false;\n      }\n\n      console.log(data);\n      return data.exercises;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n  /******************************************************/\n\n\n  const deleteImageExercise = async _id => {\n    try {\n      let response = await axios.post(\"/api/home-exercise/delete\", {\n        _id,\n        type: 1\n      });\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({\n          errors: data.errors\n        });\n        return false;\n      }\n\n      setNotifiers({\n        success: data.messages\n      });\n      return true;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n  /******************************************************/\n\n\n  const addImageExercise = async formRef => {\n    try {\n      let imageExerciseData = new FormData(formRef.current);\n      let response = await axios.post(\"/api/home-exercise/add\", imageExerciseData);\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({\n          errors: data.errors\n        });\n        return false;\n      }\n\n      setNotifiers({\n        success: data.messages\n      });\n      return data.exercise;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n  /******************************************************/\n\n\n  const editImageExercise = async formRef => {\n    try {\n      let imageExerciseData = new FormData(formRef.current);\n      imageExerciseData.set(\"type\", 1);\n      let response = await axios.post(\"/api/home-exercise/edit\", imageExerciseData);\n      let data = await response.data;\n      console.log(data);\n\n      if (!data.status) {\n        setNotifiers({\n          errors: data.errors\n        });\n        return false;\n      }\n\n      setNotifiers({\n        success: data.messages\n      });\n      return data.exercise;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  const getCategories = async () => {\n    try {\n      let response = await axios.post(\"/api/home-exercise-categories/get\");\n      let data = await response.data;\n\n      if (!data.status) {\n        // setNotifiers({ errors: data.errors });\n        return false;\n      }\n\n      return data.products;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  return {\n    getImageExercises,\n    deleteImageExercise,\n    addImageExercise,\n    editImageExercise,\n    getCategories\n  };\n};\n\n_s(useImageExercisesHook, \"Qrog+wafX6oaOESQjnohXpTgwg4=\", false, function () {\n  return [useNotifierContext];\n});\n\nexport default useImageExercisesHook;","map":{"version":3,"sources":["C:/Users/user/Desktop/khamsat/Nouveau dossier/tamreny_project/tamreny/client/src/screens/HomeExercices/hooks/index.js"],"names":["axios","useNotifierContext","useImageExercisesHook","setNotifiers","getImageExercises","response","post","type","data","status","errors","console","log","exercises","e","alert","message","deleteImageExercise","_id","success","messages","addImageExercise","formRef","imageExerciseData","FormData","current","exercise","editImageExercise","set","getCategories","products"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useNotifierContext } from \"../../../providers\";\n\nconst useImageExercisesHook = () => {\n  const { setNotifiers } = useNotifierContext();\n\n  const getImageExercises = async () => {\n    try {\n      let response = await axios.post(\"/api/home-exercise/get\", { type: 1 });\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({ errors: data.errors });\n        return false;\n      }\n      console.log(data);\n      return data.exercises;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  /******************************************************/\n\n  const deleteImageExercise = async (_id) => {\n    try {\n      let response = await axios.post(\"/api/home-exercise/delete\", {\n        _id,\n        type: 1,\n      });\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({ errors: data.errors });\n        return false;\n      }\n      setNotifiers({ success: data.messages });\n      return true;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  /******************************************************/\n\n  const addImageExercise = async (formRef) => {\n    try {\n      let imageExerciseData = new FormData(formRef.current);\n\n      let response = await axios.post(\n        \"/api/home-exercise/add\",\n        imageExerciseData\n      );\n      let data = await response.data;\n\n      if (!data.status) {\n        setNotifiers({ errors: data.errors });\n        return false;\n      }\n      setNotifiers({ success: data.messages });\n      return data.exercise;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n  /******************************************************/\n\n  const editImageExercise = async (formRef) => {\n    try {\n      let imageExerciseData = new FormData(formRef.current);\n      imageExerciseData.set(\"type\", 1);\n      let response = await axios.post(\n        \"/api/home-exercise/edit\",\n        imageExerciseData\n      );\n      let data = await response.data;\n\n      console.log(data);\n      if (!data.status) {\n        setNotifiers({ errors: data.errors });\n        return false;\n      }\n      setNotifiers({ success: data.messages });\n      return data.exercise;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  const getCategories = async () => {\n    try {\n      let response = await axios.post(\"/api/home-exercise-categories/get\");\n      let data = await response.data;\n\n      if (!data.status) {\n        // setNotifiers({ errors: data.errors });\n        return false;\n      }\n      return data.products;\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  return {\n    getImageExercises,\n    deleteImageExercise,\n    addImageExercise,\n    editImageExercise,\n    getCategories,\n  };\n};\n\nexport default useImageExercisesHook;\n"]},"metadata":{},"sourceType":"module"}