{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\khamsat\\\\Nouveau dossier\\\\tamreny_project\\\\tamreny\\\\client\\\\src\\\\screens\\\\Proteins\\\\Proteins.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Table, DataBox, SearchBox, DeleteBox } from \"../../components\"; //Hooks\n\nimport useProteinsHook from \"./hooks/index\"; //Styles\n\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Proteins = () => {\n  _s();\n\n  var _proteinObj$categoryI;\n\n  const {\n    getProteins,\n    deleteProtein,\n    addProtein,\n    editProtein,\n    getCategories\n  } = useProteinsHook();\n  const [proteins, setProteins] = useState([]);\n  const [addBoxVisible, setAddBoxVisible] = useState(false);\n  const [editBoxVisible, setEditBoxVisible] = useState(false);\n  const [deleteBoxVisible, setDeleteBoxVisible] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [proteinObj, setProteinObj] = useState({\n    _id: 0,\n    name: \"\",\n    description: \"\",\n    mainImage: \"\",\n    createDate: \"\"\n  });\n  const addFormRef = useRef(null);\n  const editFormRef = useRef(null);\n  useEffect(() => {\n    (async () => {\n      const result = await getProteins();\n\n      if (result) {\n        setProteins(result);\n      }\n\n      const protCatResult = await getCategories();\n\n      if (protCatResult) {\n        setCategories(protCatResult.map(category => ({\n          label: category.name,\n          value: category._id\n        })));\n      }\n    })();\n  }, []);\n  useEffect(() => {\n    if (addBoxVisible) setProteinObj({\n      _id: 0,\n      name: \"\",\n      description: \"\",\n      mainImage: \"\",\n      createDate: \"\"\n    });\n  }, [addBoxVisible]);\n\n  const onClickEdit = _id => {\n    const protein = proteins.find(u => u._id === _id);\n    setProteinObj(protein);\n    setEditBoxVisible(true);\n  };\n\n  const onClickDelete = _id => {\n    setProteinObj(proteins.find(u => u._id === _id));\n    setDeleteBoxVisible(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\\u0644\\u0648\\u062D\\u0629 \\u0627\\u0644\\u062A\\u062D\\u0643\\u0645 / \\u0627\\u0644\\u0628\\u0631\\u0648\\u062A\\u064A\\u0646\\u0627\\u062A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteBox, {\n      visible: deleteBoxVisible,\n      setVisible: setDeleteBoxVisible,\n      name: `حذف البروتينة رقم ${proteinObj._id}`,\n      onDelete: async () => {\n        if (await deleteProtein(proteinObj._id)) {\n          setProteins(proteins.filter(u => u._id !== proteinObj._id));\n          setDeleteBoxVisible(false);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataBox, {\n      visible: addBoxVisible,\n      setVisible: setAddBoxVisible,\n      options: {\n        name: \"اضافة مقال جديد\",\n        onSave: async () => {\n          const protein = await addProtein(addFormRef);\n\n          if (protein) {\n            setProteins([...proteins, protein]);\n            setAddBoxVisible(false);\n          }\n        },\n        btnSave: \"اضافة\",\n        formRef: addFormRef\n      },\n      inputs: [{\n        tag: \"input\",\n        label: \"اسم البروتين\",\n        props: {\n          type: \"text\",\n          name: \"name\",\n          maxLength: 100,\n          placeholder: \"اسم البروتين\",\n          required: true,\n          onChange: e => setProteinObj({ ...proteinObj,\n            name: e.target.value\n          })\n        }\n      }, {\n        tag: \"textarea\",\n        label: \"وصف البروتين\",\n        props: {\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"وصف البروتين\",\n          required: true,\n          onChange: e => setProteinObj({ ...proteinObj,\n            description: e.target.value\n          })\n        }\n      }, {\n        tag: \"select\",\n        label: \"القسم\",\n        props: {\n          name: \"categoryId\",\n          onChange: e => setProteinObj({ ...proteinObj,\n            categoryId: e.target.value\n          })\n        },\n        options: categories\n      }, {\n        tag: \"input\",\n        label: \"الصورة المصغرة\",\n        props: {\n          type: \"file\",\n          accept: \".jpg, .png, .jpeg\",\n          name: \"mainImage\",\n          placeholder: \"الصورة المصغرة\",\n          required: true,\n          multiple: true,\n          onChange: e => setProteinObj({ ...proteinObj,\n            mainImage: e.target.files[0]\n          })\n        }\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataBox, {\n      visible: editBoxVisible,\n      setVisible: setEditBoxVisible,\n      options: {\n        name: `تعديل المستخدم رقم ${proteinObj._id}`,\n        onSave: async () => {\n          const result = await editProtein(editFormRef);\n          console.log(\"result\", result);\n\n          if (result) {\n            setProteins(proteins.map(u => u._id === result._id ? result : u));\n            setEditBoxVisible(false);\n          }\n        },\n        saveBtn: \"تعديل\",\n        formRef: editFormRef\n      },\n      inputs: [{\n        tag: \"input\",\n        props: {\n          type: \"hidden\",\n          value: proteinObj._id,\n          name: \"_id\"\n        }\n      }, {\n        tag: \"input\",\n        label: \"اسم البروتين\",\n        props: {\n          type: \"text\",\n          value: proteinObj.name,\n          name: \"name\",\n          placeholder: \"اسم البروتين\",\n          required: true,\n          maxLength: 100,\n          onChange: e => setProteinObj({ ...proteinObj,\n            name: e.target.value\n          })\n        }\n      }, {\n        tag: \"textarea\",\n        label: \"وصف البروتين\",\n        props: {\n          type: \"text\",\n          value: proteinObj.description,\n          name: \"description\",\n          placeholder: \"وصف البروتين\",\n          required: true,\n          onChange: e => setProteinObj({ ...proteinObj,\n            description: e.target.value\n          })\n        }\n      }, {\n        tag: \"select\",\n        label: \"القسم\",\n        props: {\n          value: proteinObj === null || proteinObj === void 0 ? void 0 : (_proteinObj$categoryI = proteinObj.categoryId) === null || _proteinObj$categoryI === void 0 ? void 0 : _proteinObj$categoryI._id,\n          name: \"categoryId\",\n          onChange: e => setProteinObj({ ...proteinObj,\n            categoryId: e.target.value\n          })\n        },\n        options: categories\n      }, {\n        tag: \"input\",\n        label: \"الصورة المصغرة\",\n        props: {\n          type: \"file\",\n          accept: \".jpg, .png, .jpeg\",\n          placeholder: \"الصورة المصغرة\",\n          name: \"mainImage\",\n          multiple: true,\n          onChange: e => setProteinObj({ ...proteinObj,\n            mainImage: URL.createObjectURL(e.target.files[0])\n          })\n        }\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-position\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0644\\u0648\\u062D\\u0629 \\u0627\\u0644\\u062A\\u062D\\u0643\\u0645\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"\\u0627\\u0644\\u0628\\u0631\\u0648\\u062A\\u064A\\u0646\\u0627\\u062A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-new\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-add-new\",\n            onClick: () => setAddBoxVisible(true),\n            children: \"\\u0623\\u0636\\u0641 \\u062C\\u062F\\u064A\\u062F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          actions: {\n            edit: onClickEdit,\n            delete: onClickDelete\n          },\n          headers: [\"#\", \"الصورة المصغرة\", \"اسم البروتين\", \"وصف البروتين\", \"القسم\", \"تاريخ الإضافة\"],\n          data: proteins && proteins.map(u => {\n            var _u$categoryId;\n\n            return [u._id, {\n              type: \"slider\",\n              images: u.mainImage\n            }, u.name, u.description, (_u$categoryId = u.categoryId) === null || _u$categoryId === void 0 ? void 0 : _u$categoryId.name, u.createDate];\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Proteins, \"LLc78KtGFIXcAbXT5/vwz25sQJQ=\", false, function () {\n  return [useProteinsHook];\n});\n\n_c = Proteins;\nexport default Proteins;\n\nvar _c;\n\n$RefreshReg$(_c, \"Proteins\");","map":{"version":3,"sources":["C:/Users/user/Desktop/khamsat/Nouveau dossier/tamreny_project/tamreny/client/src/screens/Proteins/Proteins.jsx"],"names":["useState","useEffect","useRef","Helmet","Table","DataBox","SearchBox","DeleteBox","useProteinsHook","Proteins","getProteins","deleteProtein","addProtein","editProtein","getCategories","proteins","setProteins","addBoxVisible","setAddBoxVisible","editBoxVisible","setEditBoxVisible","deleteBoxVisible","setDeleteBoxVisible","categories","setCategories","proteinObj","setProteinObj","_id","name","description","mainImage","createDate","addFormRef","editFormRef","result","protCatResult","map","category","label","value","onClickEdit","protein","find","u","onClickDelete","filter","onSave","btnSave","formRef","tag","props","type","maxLength","placeholder","required","onChange","e","target","categoryId","options","accept","multiple","files","console","log","saveBtn","URL","createObjectURL","edit","delete","images"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Table, DataBox, SearchBox, DeleteBox } from \"../../components\";\n\n//Hooks\nimport useProteinsHook from \"./hooks/index\";\n\n//Styles\nimport \"./style.scss\";\n\nconst Proteins = () => {\n  const {\n    getProteins,\n    deleteProtein,\n    addProtein,\n    editProtein,\n    getCategories\n  } = useProteinsHook();\n\n  const [proteins, setProteins] = useState([]);\n  const [addBoxVisible, setAddBoxVisible] = useState(false);\n  const [editBoxVisible, setEditBoxVisible] = useState(false);\n  const [deleteBoxVisible, setDeleteBoxVisible] = useState(false);\n  const [categories, setCategories] = useState([]);\n\n  const [proteinObj, setProteinObj] = useState({\n    _id: 0,\n    name: \"\",\n    description: \"\",\n    mainImage: \"\",\n    createDate: \"\",\n  });\n\n  const addFormRef = useRef(null);\n  const editFormRef = useRef(null);\n\n  useEffect(() => {\n    (async () => {\n      const result = await getProteins();\n\n      if (result) {\n        setProteins(result);\n      }\n\n      const protCatResult = await getCategories();\n      if (protCatResult) {\n        setCategories(protCatResult.map(category => ({ label: category.name, value: category._id })))\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (addBoxVisible)\n      setProteinObj({\n        _id: 0,\n        name: \"\",\n        description: \"\",\n        mainImage: \"\",\n        createDate: \"\",\n      });\n  }, [addBoxVisible]);\n\n  const onClickEdit = (_id) => {\n    const protein = proteins.find((u) => u._id === _id);\n    setProteinObj(protein);\n    setEditBoxVisible(true);\n  };\n  const onClickDelete = (_id) => {\n    setProteinObj(proteins.find((u) => u._id === _id));\n    setDeleteBoxVisible(true);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>لوحة التحكم / البروتينات</title>\n      </Helmet>\n      <DeleteBox\n        visible={deleteBoxVisible}\n        setVisible={setDeleteBoxVisible}\n        name={`حذف البروتينة رقم ${proteinObj._id}`}\n        onDelete={async () => {\n          if (await deleteProtein(proteinObj._id)) {\n            setProteins(proteins.filter((u) => u._id !== proteinObj._id));\n            setDeleteBoxVisible(false);\n          }\n        }}\n      />\n      <DataBox\n        visible={addBoxVisible}\n        setVisible={setAddBoxVisible}\n        options={{\n          name: \"اضافة مقال جديد\",\n          onSave: async () => {\n            const protein = await addProtein(addFormRef);\n            if (protein) {\n              setProteins([...proteins, protein]);\n              setAddBoxVisible(false);\n            }\n          },\n          btnSave: \"اضافة\",\n          formRef: addFormRef,\n        }}\n        inputs={[\n          {\n            tag: \"input\",\n            label: \"اسم البروتين\",\n\n            props: {\n              type: \"text\",\n              name: \"name\",\n              maxLength: 100,\n              placeholder: \"اسم البروتين\",\n              required: true,\n              onChange: (e) =>\n                setProteinObj({ ...proteinObj, name: e.target.value }),\n            },\n          },\n          {\n            tag: \"textarea\",\n            label: \"وصف البروتين\",\n            props: {\n              type: \"text\",\n              name: \"description\",\n              placeholder: \"وصف البروتين\",\n              required: true,\n\n              onChange: (e) =>\n                setProteinObj({ ...proteinObj, description: e.target.value }),\n            },\n          },\n          {\n            tag: \"select\",\n            label: \"القسم\",\n            props: {\n              name: \"categoryId\",\n              onChange: (e) => setProteinObj({ ...proteinObj, categoryId: e.target.value }),\n            },\n            options: categories,\n          },\n          {\n            tag: \"input\",\n            label: \"الصورة المصغرة\",\n            props: {\n              type: \"file\",\n              accept: \".jpg, .png, .jpeg\",\n              name: \"mainImage\",\n              placeholder: \"الصورة المصغرة\",\n              required: true,\n              multiple: true,\n\n              onChange: (e) =>\n                setProteinObj({ ...proteinObj, mainImage: e.target.files[0] }),\n            },\n          },\n        ]}\n      />\n      <DataBox\n        visible={editBoxVisible}\n        setVisible={setEditBoxVisible}\n        options={{\n          name: `تعديل المستخدم رقم ${proteinObj._id}`,\n          onSave: async () => {\n            const result = await editProtein(editFormRef);\n            console.log(\"result\", result)\n            if (result) {\n              setProteins(\n                proteins.map((u) => (u._id === result._id ? result : u))\n              );\n              setEditBoxVisible(false);\n            }\n          },\n          saveBtn: \"تعديل\",\n          formRef: editFormRef,\n        }}\n        inputs={[\n          {\n            tag: \"input\",\n            props: {\n              type: \"hidden\",\n              value: proteinObj._id,\n              name: \"_id\",\n            },\n          },\n          {\n            tag: \"input\",\n            label: \"اسم البروتين\",\n            props: {\n              type: \"text\",\n              value: proteinObj.name,\n              name: \"name\",\n              placeholder: \"اسم البروتين\",\n              required: true,\n              maxLength: 100,\n              onChange: (e) =>\n                setProteinObj({ ...proteinObj, name: e.target.value }),\n            },\n          },\n          {\n            tag: \"textarea\",\n            label: \"وصف البروتين\",\n            props: {\n              type: \"text\",\n              value: proteinObj.description,\n              name: \"description\",\n              placeholder: \"وصف البروتين\",\n              required: true,\n              onChange: (e) =>\n                setProteinObj({ ...proteinObj, description: e.target.value }),\n            },\n          },\n          {\n            tag: \"select\",\n            label: \"القسم\",\n            props: {\n              value: proteinObj?.categoryId?._id,\n              name: \"categoryId\",\n              onChange: (e) => setProteinObj({ ...proteinObj, categoryId: e.target.value }),\n            },\n            options: categories,\n          },\n          {\n            tag: \"input\",\n            label: \"الصورة المصغرة\",\n            props: {\n              type: \"file\",\n              accept: \".jpg, .png, .jpeg\",\n              placeholder: \"الصورة المصغرة\",\n              name: \"mainImage\",\n              multiple: true,\n              onChange: (e) =>\n                setProteinObj({\n                  ...proteinObj,\n                  mainImage: URL.createObjectURL(e.target.files[0]),\n                }),\n            },\n          },\n        ]}\n      />\n      <div className=\"main-container\">\n        <div className=\"page-position\">\n          <h2>لوحة التحكم</h2>\n          <p>/</p>\n          <h6>البروتينات</h6>\n        </div>\n        <div className=\"container\">\n          {/*<SearchBox />*/}\n          <div className=\"add-new\">\n            <button\n              className=\"btn-add-new\"\n              onClick={() => setAddBoxVisible(true)}\n            >\n              أضف جديد\n            </button>\n          </div>\n          <Table\n            actions={{\n              edit: onClickEdit,\n              delete: onClickDelete,\n            }}\n            headers={[\n              \"#\",\n              \"الصورة المصغرة\",\n              \"اسم البروتين\",\n              \"وصف البروتين\",\n              \"القسم\",\n              \"تاريخ الإضافة\",\n            ]}\n            data={\n              proteins &&\n              proteins.map((u) => [\n                u._id,\n                { type: \"slider\", images: u.mainImage },\n                u.name,\n                u.description,\n                u.categoryId?.name,\n                u.createDate,\n              ])\n            }\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Proteins;\n"]},"metadata":{},"sourceType":"module"}